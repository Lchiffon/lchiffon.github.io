<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>七风阁</title>
    <link>http://lchiffon.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Tue, 20 Jun 2017 10:02:33 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>可以滚的词云, 就问你怕不怕</title>
      <link>http://lchiffon.github.io/2017/04/25/candy.html</link>
      <guid>http://lchiffon.github.io/2017/04/25/candy.html</guid>
      <pubDate>Tue, 25 Apr 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;昨天看到了一个很有意思的Issue, 问&lt;a href=&quot;https://github.com/Lchiffon/wordcloud2/issues/21&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;可不可以做一个3D球形的词云:)&lt;/a&gt;&lt;/p&gt;
&lt;p
      
      </description>
      
      <content:encoded><![CDATA[<p>昨天看到了一个很有意思的Issue, 问<a href="https://github.com/Lchiffon/wordcloud2/issues/21" target="_blank" rel="external">可不可以做一个3D球形的词云:)</a></p>
<p>想想是可以实现的, 过程中用了一些黑魔法:</p>
<ol>
<li>用webshot将词云截图成一个图片</li>
<li>用threejs将图片映射在一个球上(类似3D地图的实现)</li>
<li>之后就可以玩这个球了噗哈哈</li>
</ol>
<p><img src="https://user-images.githubusercontent.com/7221728/27312445-ec960882-559a-11e7-860a-2c87de242ce4.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(threejs)</div><div class="line"><span class="keyword">library</span>(wordcloud2)</div><div class="line"><span class="keyword">library</span>(htmlwidgets)</div><div class="line"><span class="keyword">library</span>(webshot)</div><div class="line">hw = wordcloud2(demoFreqC,size = <span class="number">4</span>)</div><div class="line">saveWidget(hw,<span class="string">"1.html"</span>,selfcontained = <span class="literal">F</span>)</div><div class="line">webshot(<span class="string">"1.html"</span>,<span class="string">"1.jpeg"</span>,vwidth = <span class="number">4000</span>, vheight = <span class="number">2000</span>, delay =<span class="number">20</span>)</div><div class="line">earth &lt;- <span class="string">"1.jpeg"</span></div><div class="line">globejs(img=earth, bg=<span class="string">"white"</span>)</div></pre></td></tr></table></figure>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/04/25/candy.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>如何合理的提问</title>
      <link>http://lchiffon.github.io/2017/04/25/questions.html</link>
      <guid>http://lchiffon.github.io/2017/04/25/questions.html</guid>
      <pubDate>Tue, 25 Apr 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;经常会遇到有人问问题, 却又问不到点子上, 而且很多东西是可以直接百度或者谷歌, 或者在&lt;br&gt;问答网站&lt;a href=&quot;http://strackoverflow.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;strackoverflow&lt;/a&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>经常会遇到有人问问题, 却又问不到点子上, 而且很多东西是可以直接百度或者谷歌, 或者在<br>问答网站<a href="http://strackoverflow.com" target="_blank" rel="external">strackoverflow</a> 查到的. 目前我所看到的最好的<br>提问引导是在mxnet的<a href="https://github.com/dmlc/mxnet/issues/new" target="_blank" rel="external">new issue</a>界面上看到的.</p>
<p>简单总结下需要以下几个部分:</p>
<ol>
<li>环境信息</li>
<li>全部错误信息</li>
<li>最小<strong>可执行</strong>代码</li>
<li>哪一步的代码导致了错误</li>
<li>尝试过用什么方式来解决</li>
</ol>
<p>以下是正文信息:</p>
<p>For bugs or installation issues, please provide the following information.<br>The more information you provide, the more likely people will be able to help you.</p>
<h2 id="Environment-info"><a href="#Environment-info" class="headerlink" title="Environment info"></a>Environment info</h2><p>Operating System:</p>
<p>Compiler:</p>
<p>Package used (Python/R/Scala/Julia):</p>
<p>MXNet version:</p>
<p>Or if installed from source:</p>
<p>MXNet commit hash (<code>git rev-parse HEAD</code>):</p>
<p>If you are using python package, please provide</p>
<p>Python version and distribution:</p>
<p>If you are using R package, please provide</p>
<p>R <code>sessionInfo()</code>:</p>
<h2 id="Error-Message"><a href="#Error-Message" class="headerlink" title="Error Message:"></a>Error Message:</h2><p>Please paste the full error message, including stack trace.</p>
<h2 id="Minimum-reproducible-example"><a href="#Minimum-reproducible-example" class="headerlink" title="Minimum reproducible example"></a>Minimum reproducible example</h2><p>if you are using your own code, please provide a short script that reproduces the error.</p>
<h2 id="Steps-to-reproduce"><a href="#Steps-to-reproduce" class="headerlink" title="Steps to reproduce"></a>Steps to reproduce</h2><p>or if you are running standard examples, please provide the commands you have run that lead to the error.</p>
<p>1.<br>2.<br>3.</p>
<h2 id="What-have-you-tried-to-solve-it"><a href="#What-have-you-tried-to-solve-it" class="headerlink" title="What have you tried to solve it?"></a>What have you tried to solve it?</h2><p>1.<br>2.<br>3.</p>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/04/25/questions.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>多说再见</title>
      <link>http://lchiffon.github.io/2017/04/25/duoshuo.html</link>
      <guid>http://lchiffon.github.io/2017/04/25/duoshuo.html</guid>
      <pubDate>Tue, 25 Apr 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;多说是一个国内为各种网站和博客提供评论窗的网站, 今年三月, 慢慢听到这样的一个消息:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;重要通知: 多说即将关闭&lt;br&gt;多说网 发表于 3月21日&lt;br&gt;因公司业务调整，非常遗憾的向大家宣布多说项目即将关闭。 我们将于2017年6月1
      
      </description>
      
      <content:encoded><![CDATA[<p>多说是一个国内为各种网站和博客提供评论窗的网站, 今年三月, 慢慢听到这样的一个消息:</p>
<blockquote>
<p>重要通知: 多说即将关闭<br>多说网 发表于 3月21日<br>因公司业务调整，非常遗憾的向大家宣布多说项目即将关闭。 我们将于2017年6月1日正式关停服务，在此之前您可以通过后台的数据导出功能导出自己站点的评论数据。 对此给您造成的不便，我们深表歉意，感谢您的一路相伴。</p>
</blockquote>
<p>也就是说从14年用到现在的多说就要这样没了, 忧伤, 也算是一个被微信公众号逼死的公司吧,<br>不过真心感谢多说团队的坚持和付出, 话说多说如果愿意提供付费服务我也愿意啊…</p>
<p>一边忧伤一边寻找替代的东西, <del>没打赏就算了</del>总不能没评论吧…</p>
<h1 id="Disqus"><a href="#Disqus" class="headerlink" title="Disqus"></a>Disqus</h1><p>Disqus是老牌评论插件, 完全没有像多说的垃圾评论和关闭问题, 唯一不爽的一点就是Disqus是一个被墙的插件, 如果改用Disqus, hexo分分钟搞定, 但是墙掉的总是会有点不舒服, 再找找</p>
<h1 id="搜狐肠炎"><a href="#搜狐肠炎" class="headerlink" title="搜狐肠炎"></a>搜狐肠炎</h1><p>哦不, 是搜狐畅言, 基本类似的功能, 以搜狐的风格, 果然有不少杂七杂八的东西, 忍痛注册, 需要备案号… :88:</p>
<h1 id="友言"><a href="#友言" class="headerlink" title="友言"></a>友言</h1><p>友言也是一个第三方的插件, 是做JiaThis的公司做的, 但是看谁在用的时候发现都是各种小网站, 而且没人用, 放弃…</p>
<h1 id="gitment"><a href="#gitment" class="headerlink" title="gitment"></a>gitment</h1><p>gitment是一个用github issue来代替评论的插件: 使用一个github的issue来代替评论, 评论需要登陆github账号, 没有github不能评论, 项目地址 <a href="https://github.com/imsun/gitment#get-started" target="_blank" rel="external">https://github.com/imsun/gitment#get-started</a></p>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/04/25/duoshuo.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Vue2的一些阅读</title>
      <link>http://lchiffon.github.io/2017/04/19/vue2.html</link>
      <guid>http://lchiffon.github.io/2017/04/19/vue2.html</guid>
      <pubDate>Wed, 19 Apr 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;learn vue.js 2 最近在搞一些前端的东西, 所以就读了下这本技术的书籍, 技术的深度还可以, 适合读完官网教程并且拒绝继续使用vue1的用户进行更深的阅读,里面着重讲述了模板, 单文件系统, vuex等内容.&lt;br&gt;里面无聊的技术就不再分享, 分享下读这个书的一
      
      </description>
      
      <content:encoded><![CDATA[<p>learn vue.js 2 最近在搞一些前端的东西, 所以就读了下这本技术的书籍, 技术的深度还可以, 适合读完官网教程并且拒绝继续使用vue1的用户进行更深的阅读,里面着重讲述了模板, 单文件系统, vuex等内容.<br>里面无聊的技术就不再分享, 分享下读这个书的一些小细节.</p>
<p>我一直觉得前端的世界很有意思, 很有创造力, 大家根本不介意重复造轮子, 而是介意这个工具是不是自己喜欢的.<br>作者在第一章就写下了这样一段话, 鼓励大家去尝试创造有意思的东西:<br>‘When you realize that something cool does not exist and you are able to create it—just do it!’<br>(当你意识到有些很Cool的东西还没有人做, 而你恰好能创造它, 那你还在等什么呢? Just do it!)</p>
<p>在另一部分里面, 作者详细的说明了如何去修改vue.js的源码并且做出自己的贡献:<br>‘I’m sure you have plenty of ideas<br>about how to improve or add some functionality to Vue.js. So change it, rebuild, test, deploy!<br>Happy pull requests!’<br>(我确信你对Vue.js有很多想法, 那么就开心的修改, 测试, 提交, 为开源社区做出自己的贡献吧~)</p>
<p>作者为了说明vue的轻量级, 黑起Angular.js(另一个主流的前端框架)也不遗余力, 你想写个’Hello World’么, 先准备上18个依赖包, 以及数千个字吧，噗哈哈:<br>“Even without TypeScript, Angular’s Quickstart guide starts out with an app that uses<br>ES2015 JavaScript, NPM with 18 dependencies, 4 files, and over 3,000 words to explain it<br>all - just to say Hello World.”</p>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/04/19/vue2.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>cosx</title>
      <link>http://lchiffon.github.io/2017/04/19/cosx.html</link>
      <guid>http://lchiffon.github.io/2017/04/19/cosx.html</guid>
      <pubDate>Wed, 19 Apr 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;最近一个月除了自己超花心思的事情之外, 跟着益辉大大后面做一些打杂的事情: &lt;cos.name&gt;要将原来在wordpress的网站重写成一套依赖blogdown的网站,  细节可以参考&lt;a href=&quot;https://yihui.name/cn/2017/03/drink-
      
      </description>
      
      <content:encoded><![CDATA[<p>最近一个月除了自己超花心思的事情之外, 跟着益辉大大后面做一些打杂的事情: <cos.name>要将原来在wordpress的网站重写成一套依赖blogdown的网站,  细节可以参考<a href="https://yihui.name/cn/2017/03/drink-more/" target="_blank" rel="external">能复饮乎</a>及<a href="http://statsjoke.me/rocket/" target="_blank" rel="external">送火箭升天</a>.</cos.name></p>
<p>有些收获, 略记一二:</p>
<h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><p>之前一直对于git就停留在几个基本命令, pull, add, commit, push, reset, clone.<br>这次在益辉大大以及西红柿的监督下, 慢慢懂了各种分支的使用, merge, pr等工具, 改到<br>后来, 又发掘出来了Atom里面的git-plus, 各种黑魔法, 熟了分支切换之后直接进行一键提交,<br>把add+commit+push一锅端, 可惜Yalei来我家在秀操作的时候Atom出了问题, 黑历史!</p>
<h1 id="Chrome-Extention"><a href="#Chrome-Extention" class="headerlink" title="Chrome Extention"></a>Chrome Extention</h1><p>在文章review的过程中, 益辉大大写了一小段JS的代码, 用来快速打开PR里面的开发版的文章页面.<br>在谢大大的感召下, 写了个<a href="https://github.com/Lchiffon/cosxReviewTool" target="_blank" rel="external">谷歌拓展工具</a>.<br>中间翻了很多博客和文档, 谷歌扩展真心复杂, 最难的在找到适合使用的那个函数, 最后搞出了一个代码<br>注入的方式解决掉了</p>
<h1 id="Vue实现的搜索"><a href="#Vue实现的搜索" class="headerlink" title="Vue实现的搜索"></a>Vue实现的搜索</h1><p>因为是静态页面, 所以搜索是个小问题, 这段时间为了公司一个项目在没日没夜的看vue, 谢大大在一个issue里面提了使用js+githubAPI来写这个静态搜索之后, 就着手写了这个<a href="https://github.com/Lchiffon/vue-github-api" target="_blank" rel="external">小页面</a>, 目前还在考虑怎么<br>把这个东西合并到主站里面, 等谢大大起来再说吧.</p>
<h1 id="最大的收获"><a href="#最大的收获" class="headerlink" title="最大的收获"></a>最大的收获</h1><p>其实, 最大的收获是在改统计之都早期文章的收获, 改文章的过程中将08年开始的文章一篇篇读了下来,<br>虽然还没有全部读完, 大概到10年左右吧. 但是从字里行间透露出来的力量让我觉得还是很振奋人心的.<br>当时基本是一个没有太多大神的时代, 做一切事情都是靠年轻(lao)一辈的爱好和一腔热血, 看完还是有一些感动的. 这也是到后来越来月越愿意在这个项目上跟着谢大大忙前忙后的原因.</p>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/04/19/cosx.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>一个忧伤的bug</title>
      <link>http://lchiffon.github.io/2017/03/14/bugs.html</link>
      <guid>http://lchiffon.github.io/2017/03/14/bugs.html</guid>
      <pubDate>Tue, 14 Mar 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;最近在开发一个神秘的package, 如果能做出来, 估计会很好玩, 涉及到几个神奇的库的整合:)&lt;/p&gt;
&lt;p&gt;然而, 在开发过程中, 出现了一个神奇的bug, 看到问题后我哭笑不得, 然后认真地把它记录下来:&lt;/p&gt;
&lt;p&gt;&lt;del&gt;前两天去静安寺上香,祈祷了三件事, 
      
      </description>
      
      <content:encoded><![CDATA[<p>最近在开发一个神秘的package, 如果能做出来, 估计会很好玩, 涉及到几个神奇的库的整合:)</p>
<p>然而, 在开发过程中, 出现了一个神奇的bug, 看到问题后我哭笑不得, 然后认真地把它记录下来:</p>
<p><del>前两天去静安寺上香,祈祷了三件事, 代码无bug, 航班不晚点, 机油速脱单. 看来只能指望后两件事情实现了</del></p>
<p>其实问题就是我写的两个包, <code>leafletCN</code>与<code>REmap</code>里面竟然有一个函数名是重复了:(. 所以二者不能同时使用, kkk.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">leafletCN::mapNames		Demo dataset and other function</div><div class="line">maps::internal		Internally Required Functions</div><div class="line">REmap::mapNames		Get the names of a choropleth map for remapC</div></pre></td></tr></table></figure>
<p>从此不得不感慨自己的智商是不是有下限, 速度改掉leafletCN里面的函数名, 不过CRAN上面是没办法了..</p>
<p>请让我等几个月更新到CRAN, 否则Uwe又要找我事情了..</p>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/03/14/bugs.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>GT6 ba汽车工程</title>
      <link>http://lchiffon.github.io/2017/03/05/car.html</link>
      <guid>http://lchiffon.github.io/2017/03/05/car.html</guid>
      <pubDate>Sun, 05 Mar 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;在鸟兄的推荐下看了这本书， GT6 ba汽车工程。&lt;/p&gt;
&lt;p&gt;这本书是GT6游戏光盘附赠手册，然而，在整本书中你根本无法看到任何关于GT6的内容。取而代之的是各种关于汽车工程与赛车调教的内容。&lt;/p&gt;
&lt;p&gt;这本手册，能让读者明白一些基本的常识与名词，里面关于各种物理学
      
      </description>
      
      <content:encoded><![CDATA[<p>在鸟兄的推荐下看了这本书， GT6 ba汽车工程。</p>
<p>这本书是GT6游戏光盘附赠手册，然而，在整本书中你根本无法看到任何关于GT6的内容。取而代之的是各种关于汽车工程与赛车调教的内容。</p>
<p>这本手册，能让读者明白一些基本的常识与名词，里面关于各种物理学的描述也让自己穿越回了那个什么都不懂的学生时代，比如扭力的概念，空气动力学的伯努利定律，阻尼力与阻尼系数…</p>
<p>但是在这之外，读完全书，反而激起了自己的很多兴趣与思考，比如尝试解释为什么大部分乘用车都是发动机在前面而驱动轮在后面（简单说是因为容易调教车身平衡，不易出现转向不足与过度）。</p>
<p>还有就是以前总感觉一辆A级车比C级车更好开，油门更灵敏，怠速够快。长者给的解释是调教不同，细看了这本手册之后，发现从调教与车的区别有好多方式可以得到油门更灵敏的结果:</p>
<ol>
<li>最简单的，车重不同，同扭力下加速度不同</li>
<li>其次，同扭力下，车身越长，传递到后轮的马力就越少，时间就越长(?)</li>
<li>变速箱的密齿比与疏齿比决定了低速与高速下的马力区别</li>
<li>。。。</li>
</ol>
<p>油门更灵敏也是有代价的，最高速度上不去，舒适性减弱….</p>
<p>大概就是这样吧，这本书会让我基本入门, 也会让我了解到汽车工程,调教这一领域是有多有趣, 又多复杂。</p>
<p>PS: 那天和肖老师聊起我读这本书被问到，可不可以通过历史数据与模型来得到一辆汽车调教的最优结果。<br>细细想来，样本量的多少和驾驶员的不确定性是这个问题求解的最棘手的因素。</p>
<p>以及，如果自动驾驶能达到一般赛车手的水平，这个问题我觉得是可以用模型解决的。</p>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/03/05/car.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>我的美食观</title>
      <link>http://lchiffon.github.io/2017/03/04/food.html</link>
      <guid>http://lchiffon.github.io/2017/03/04/food.html</guid>
      <pubDate>Sat, 04 Mar 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;为什么我不去卖光碟的店挑电影呢?&lt;br&gt;因为里面没有评分啊&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作为一个吃货, 挑选餐厅总是一个艰难而痛苦的决定. 幸好, 现代很多网站提供了各种餐厅的评价分数, 以一个量化的指标来评价餐厅的好坏.&lt;/p&gt;
&lt;
      
      </description>
      
      <content:encoded><![CDATA[<blockquote>
<p>为什么我不去卖光碟的店挑电影呢?<br>因为里面没有评分啊</p>
</blockquote>
<p>作为一个吃货, 挑选餐厅总是一个艰难而痛苦的决定. 幸好, 现代很多网站提供了各种餐厅的评价分数, 以一个量化的指标来评价餐厅的好坏.</p>
<p>但是, 没有一个网站是以口味来评价餐厅的, 而是以点评来评价, 换句话说, 口味, 环境, 服务, 缺一不可.</p>
<p>而且, 不得不承认, 餐厅背后的商业价值才是默认排序最需要考虑的.</p>
<p>对于只在意口味不在意环境和服务的我来说, 经常使用的是口味从高到低来排序, 但这个排序会很自然带来一个问题, 餐厅消费越高, 环境越好, 口味就越棒.</p>
<blockquote>
<p>人们总希望在花了一大笔钱之后不承认自己被坑了…</p>
</blockquote>
<p>所以呢, 我后来开始关注餐厅的分差, 口味环境分差越大, 说明这家店是一个超越了餐厅本身环境的美食.</p>
<p>支持这一论点需要一些数据比如:<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">head(data)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">                          name city avg_price product_rating environment_rating</div><div class="line"><span class="number">1</span>    黑柴日本料理铁板烧(黑柴Ⅰ) 上海       <span class="number">168</span>            <span class="number">8.6</span>                <span class="number">8.5</span></div><div class="line"><span class="number">2</span>         王品牛排(上海松江店) 上海       <span class="number">371</span>            <span class="number">9.1</span>                <span class="number">9.2</span></div><div class="line"><span class="number">3</span>       赞巴拉藏餐(松江万达店) 上海        <span class="number">77</span>            <span class="number">8.8</span>                <span class="number">9.1</span></div><div class="line"><span class="number">4</span>   松荣之风和里烧肉(江学路店) 上海       <span class="number">144</span>            <span class="number">7.9</span>                <span class="number">8.2</span></div><div class="line"><span class="number">5</span>             吃好丸好(外冈店) 上海        <span class="number">12</span>            <span class="number">7.1</span>                <span class="number">7.1</span></div><div class="line"><span class="number">6</span> 陌生人火锅餐厅(开元地中海店) 上海        <span class="number">99</span>            <span class="number">9.0</span>                <span class="number">9.1</span></div></pre></td></tr></table></figure>
<p><del>你问了数据怎么来的我也不会说的</del></p>
<p>最简单的方法是做个回归, 用残差看下各个餐厅是溢价还是折价<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">model = lm(product_rating~environment_rating+avg_price+<span class="number">0</span>,data=data)</div><div class="line">summary(model)</div></pre></td></tr></table></figure></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">...</span></div><div class="line">Coefficients:</div><div class="line">                     Estimate Std. Error  t value Pr(&gt;|t|)    </div><div class="line">environment_rating  <span class="number">1.002e+00</span>  <span class="number">2.889e-05</span> <span class="number">34673.77</span>   &lt;<span class="number">2e-16</span> ***</div><div class="line">avg_price          -<span class="number">1.524e-05</span>  <span class="number">5.622e-07</span>   -<span class="number">27.11</span>   &lt;<span class="number">2e-16</span> ***</div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"><span class="keyword">...</span></div></pre></td></tr></table></figure>
<p>我还以为有个新参数出来呢, 结果就是1.0, R-square 0.99.</p>
<p>因为某些原因(看官自己脑补), avg_price平均价格不显著, 所以, 不用考虑价格, 直接用口味减环境来评价餐厅就好.</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(dplyr)</div><div class="line">data %&gt;%</div><div class="line">  mutate(rate = product_rating-environment_rating) %&gt;%   arrange(-rate) %&gt;%</div><div class="line">  filter(city==<span class="string">'上海'</span>) %&gt;%</div><div class="line">  head(<span class="number">10</span>)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">                       name city avg_price product_rating environment_rating rate</div><div class="line">1  八村烧烤海鲜满天红小龙虾 上海        42            7.5                4.2  3.3</div><div class="line">2                    馄饨店 上海        10            4.0                1.0  3.0</div><div class="line">3                    大肠面 上海        27            7.8                5.0  2.8</div><div class="line">4              旧款宁波饭店 上海       120            8.2                5.5  2.7</div><div class="line">5                华华川菜馆 上海        50            7.2                4.6  2.6</div><div class="line">6                康林农家乐 上海        77            8.7                6.2  2.5</div><div class="line">7            D&amp;D Steakhouse 上海       288            8.8                6.4  2.4</div><div class="line">8      老四海鲜城(通北路店) 上海        51            6.3                3.9  2.4</div><div class="line">9  彩虹寿司(东体育会路总店) 上海        43            8.2                5.8  2.4</div><div class="line">10       芷月楼老法师高汤面 上海        33            6.9                4.6  2.3</div></pre></td></tr></table></figure>
<p>这批店有点恐怖, 我还是定下环境上6.5以上的店吧..我对美食的心还不够诚…</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">data %&gt;%</div><div class="line">  mutate(rate = product_rating-environment_rating) %&gt;%   arrange(-rate) %&gt;%</div><div class="line">  filter(city==&apos;上海&apos; &amp; environment_rating&gt;6.5) %&gt;%</div><div class="line">  head(20)</div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">                              name city avg_price product_rating environment_rating rate</div><div class="line"><span class="number">1</span>                       佳味海鲜馆 上海       <span class="number">142</span>            <span class="number">9.0</span>                <span class="number">6.8</span>  <span class="number">2.2</span></div><div class="line"><span class="number">2</span>                         凯恩酒家 上海       <span class="number">100</span>            <span class="number">9.1</span>                <span class="number">6.9</span>  <span class="number">2.2</span></div><div class="line"><span class="number">3</span>             粤汕一牛(徐虹中路店) 上海        <span class="number">96</span>            <span class="number">9.0</span>                <span class="number">7.0</span>  <span class="number">2.0</span></div><div class="line"><span class="number">4</span>                           潮汕庄 上海       <span class="number">163</span>            <span class="number">8.6</span>                <span class="number">6.6</span>  <span class="number">2.0</span></div><div class="line"><span class="number">5</span>                 北士大酒店中餐厅 上海       <span class="number">138</span>            <span class="number">8.9</span>                <span class="number">6.9</span>  <span class="number">2.0</span></div><div class="line"><span class="number">6</span>                       谷沙屋面铺 上海        <span class="number">18</span>            <span class="number">8.7</span>                <span class="number">6.7</span>  <span class="number">2.0</span></div><div class="line"><span class="number">7</span>                 蓝帝老上海本帮菜 上海        <span class="number">98</span>            <span class="number">8.5</span>                <span class="number">6.6</span>  <span class="number">1.9</span></div><div class="line"><span class="number">8</span>             上海为民商行清真饭店 上海        <span class="number">23</span>            <span class="number">8.5</span>                <span class="number">6.6</span>  <span class="number">1.9</span></div><div class="line"><span class="number">9</span>                       大块头排档 上海        <span class="number">78</span>            <span class="number">8.5</span>                <span class="number">6.6</span>  <span class="number">1.9</span></div><div class="line"><span class="number">10</span>                顽固亲父串烧酒馆 上海       <span class="number">155</span>            <span class="number">8.8</span>                <span class="number">6.9</span>  <span class="number">1.9</span></div><div class="line"><span class="number">11</span> 钱家?乔老爷铜炉涮锅(内江路总店) 上海        <span class="number">87</span>            <span class="number">9.1</span>                <span class="number">7.2</span>  <span class="number">1.9</span></div><div class="line"><span class="number">12</span>                          蛇王王 上海       <span class="number">164</span>            <span class="number">8.8</span>                <span class="number">7.0</span>  <span class="number">1.8</span></div><div class="line"><span class="number">13</span>                        金芬食府 上海        <span class="number">71</span>            <span class="number">8.8</span>                <span class="number">7.0</span>  <span class="number">1.8</span></div><div class="line"><span class="number">14</span>                      广东生滚粥 上海        <span class="number">21</span>            <span class="number">8.4</span>                <span class="number">6.6</span>  <span class="number">1.8</span></div><div class="line"><span class="number">15</span>              天全鱼庄(零陵路店) 上海        <span class="number">52</span>            <span class="number">8.4</span>                <span class="number">6.6</span>  <span class="number">1.8</span></div><div class="line"><span class="number">16</span>            新苑私房菜(嘉善路店) 上海       <span class="number">128</span>            <span class="number">8.6</span>                <span class="number">6.8</span>  <span class="number">1.8</span></div><div class="line"><span class="number">17</span>                湘粹(南京西路店) 上海        <span class="number">65</span>            <span class="number">8.6</span>                <span class="number">6.8</span>  <span class="number">1.8</span></div><div class="line"><span class="number">18</span>                  兄弟情海鲜烧烤 上海        <span class="number">86</span>            <span class="number">9.1</span>                <span class="number">7.3</span>  <span class="number">1.8</span></div><div class="line"><span class="number">19</span>                      小灯泡烧烤 上海        <span class="number">38</span>            <span class="number">9.0</span>                <span class="number">7.2</span>  <span class="number">1.8</span></div><div class="line"><span class="number">20</span>                  阿新海鲜加工坊 上海       <span class="number">116</span>            <span class="number">9.0</span>                <span class="number">7.2</span>  <span class="number">1.8</span></div></pre></td></tr></table></figure>
<p>哦呀, 不错可以的, 试想一下, 其实每天大家吃的店一般是口味8点几的, 一家店能口味上9但是环境只有6分, 那么, 该是有多好吃….</p>
<p>恩, 可以约起来美食探险了, 前提是要把潮汕牛肉去掉 <del>什么米其林, 美食林,点评米其林的白白</del></p>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/03/04/food.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Vue.js学习III(模板语法)</title>
      <link>http://lchiffon.github.io/2017/02/09/vue03.html</link>
      <guid>http://lchiffon.github.io/2017/02/09/vue03.html</guid>
      <pubDate>Thu, 09 Feb 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;有用的链接:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/awesome-vue#libraries--plugins&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vue生态库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>有用的链接:</p>
<ul>
<li><a href="https://github.com/vuejs/awesome-vue#libraries--plugins" target="_blank" rel="external">Vue生态库</a></li>
<li><a href="https://github.com/vuejs/vue" target="_blank" rel="external">Github</a></li>
<li><a href="https://jsfiddle.net/chrisvfritz/50wL7mdz/" target="_blank" rel="external">在线编辑器</a></li>
<li><a href="https://cn.vuejs.org" target="_blank" rel="external">中文VUE教程网站</a></li>
<li><a href="https://cn.vuejs.org/v2/api" target="_blank" rel="external">API文档</a></li>
</ul>
<h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><p>模板语法是一套用于将DOM绑定到底层Vue的方法,所有vue.js都可以被HTML解析. 每次底层数据被改变的时候, Vue都会自动计算重新渲染的最小代价, 并应用到整个页面上. 同样也可以使用<a href="https://cn.vuejs.org/v2/guide/render-function.html" target="_blank" rel="external">渲染函数</a>或者用JSX模板</p>
<h2 id="插值"><a href="#插值" class="headerlink" title="插值"></a>插值</h2><h3 id="最简单的文本插值"><a href="#最简单的文本插值" class="headerlink" title="最简单的文本插值"></a>最简单的文本插值</h3><p>使用大括号插值<code>\{\{}}</code>(名为Mustache)<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Message: \&#123;\&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>可以使用<code>v-once</code>进行单次插值, 数据改变后插值内容不更新<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-once</span>&gt;</span>THIS wont change: \&#123;\&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="纯HTML插值"><a href="#纯HTML插值" class="headerlink" title="纯HTML插值"></a>纯HTML插值</h3><p>纯html插值需要使用<code>v-html</code>来实现, 数据绑定会被忽略, 有可能引起<a href="https://en.wikipedia.org/wiki/Cross-site_scripting" target="_blank" rel="external">XSS攻击</a>, 该部分忽略</p>
<h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p>Mustache不能用于HTML属性, 需要使用<code>v-bind:@attribute</code>来绑定属性:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">"dynamicId"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>同样可以使用布尔值来实现:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-bind:disabled</span>=<span class="string">"someConditions"</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="JavaScript表达式"><a href="#JavaScript表达式" class="headerlink" title="JavaScript表达式"></a>JavaScript表达式</h3><p>Vue可以使用单个表达式实现, 可以使用<code>Math</code>和<code>Date</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">\&#123;\&#123; number + <span class="number">1</span>&#125;&#125;</div><div class="line">\&#123;\&#123; ok ? <span class="string">'Yes'</span> : <span class="string">'No'</span>&#125;&#125;</div><div class="line">\&#123;\&#123; message.split(<span class="string">""</span>).reverse(),join(<span class="string">""</span>) &#125;&#125;</div></pre></td></tr></table></figure></p>
<p>以下例子是完整的语句, 并不会生效<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">\&#123;\&#123; <span class="keyword">var</span> a = <span class="number">1</span>&#125;&#125;</div><div class="line">\&#123;\&#123; <span class="keyword">if</span>(OK)&#123;<span class="keyword">return</span> message&#125; &#125;&#125;</div></pre></td></tr></table></figure></p>
<h2 id="Vue指令"><a href="#Vue指令" class="headerlink" title="Vue指令"></a>Vue指令</h2><p><code>v-</code>开头的命令为vue使用的指令, 比如<code>v-if</code>为判断表达式真假而插入元素<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"seen"</span>&gt;</span>NOW UC me<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>一些指令可以接受一个参数, 在后面用冒号指明, 如<code>v-bind</code>用于响应式更新HTML属性:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">"url"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>还有一个例子为用<code>v-on:click</code>来对事件进行绑定.</p>
<h3 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h3><p>用<code>.</code>绑定特殊后缀, 比如用<code>.prevent</code>修饰符告诉<code>v-on</code>调用<code>event.preventDefault()</code>:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>=<span class="string">"onSubmit"</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h3><p>使用<code>|</code>来做文本格式化:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">\&#123;\&#123; message | capitalize &#125;&#125;</div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">"rawId | formatId"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><code>v-bind</code>仅在2.1.0之后才可以使用.<br>在Vue中的定义如下:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">new</span> Vue(&#123;</div><div class="line">  <span class="comment">// el,data,..</span></div><div class="line">  filters:&#123;</div><div class="line">    <span class="attr">capitalize</span>: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</div><div class="line">      <span class="keyword">if</span>(!value) <span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">      value = value.toString()</div><div class="line">      <span class="keyword">return</span> value.chartAt(<span class="number">0</span>).toUpperCase() + value.slice(<span class="number">1</span>)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>过滤器可以串联,可以传其他参数.<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">\&#123;\&#123; message | filter1 | filter(Arg2, Arg3) &#125;&#125;</div></pre></td></tr></table></figure></p>
<h2 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h2><p><code>v-bind</code>可以缩写为<code>:</code><br><code>v-on</code>可以缩写为<code>@</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--完整语法--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">"url"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!--缩写--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">"url"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!--完整语法--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click</span>=<span class="string">"doSth"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!--缩写--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">"doSth"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/02/09/vue03.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Vue.js学习II(Vue实例)</title>
      <link>http://lchiffon.github.io/2017/02/08/vue02.html</link>
      <guid>http://lchiffon.github.io/2017/02/08/vue02.html</guid>
      <pubDate>Wed, 08 Feb 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;有用的链接:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/awesome-vue#libraries--plugins&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vue生态库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>有用的链接:</p>
<ul>
<li><a href="https://github.com/vuejs/awesome-vue#libraries--plugins" target="_blank" rel="external">Vue生态库</a></li>
<li><a href="https://github.com/vuejs/vue" target="_blank" rel="external">Github</a></li>
<li><a href="https://jsfiddle.net/chrisvfritz/50wL7mdz/" target="_blank" rel="external">在线编辑器</a></li>
<li><a href="https://cn.vuejs.org" target="_blank" rel="external">中文VUE教程网站</a></li>
<li><a href="https://cn.vuejs.org/v2/api" target="_blank" rel="external">API文档</a></li>
</ul>
<h2 id="Vue实例"><a href="#Vue实例" class="headerlink" title="Vue实例"></a>Vue实例</h2><h3 id="构造器"><a href="#构造器" class="headerlink" title="构造器"></a>构造器</h3><ol>
<li>使用: <code>new Vue({})</code></li>
<li>可复用的构造器:</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myComponent = Vue.extend(&#123;</div><div class="line">  <span class="comment">//扩展选项</span></div><div class="line">&#125;)</div><div class="line"><span class="keyword">var</span> myComponentInstance = <span class="keyword">new</span> MyComponent</div></pre></td></tr></table></figure>
<p>建议使用自定义元素而不是可复用构造器</p>
<h3 id="属性与方法"><a href="#属性与方法" class="headerlink" title="属性与方法"></a>属性与方法</h3><ol>
<li>每个实例都会自动<strong>代理</strong>data中的对象的所有属性</li>
<li>只有data的对象是可以被<strong>代理</strong>的</li>
</ol>
<h4 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> data = &#123;<span class="attr">a</span>:<span class="number">1</span>&#125;</div><div class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</div><div class="line">  <span class="attr">data</span>: data</div><div class="line">&#125;)</div><div class="line"></div><div class="line">data.a==vm.a</div><div class="line"><span class="comment">//设置属性会影响原始数据</span></div><div class="line">vm.a=<span class="number">2</span></div><div class="line">data.a</div><div class="line"><span class="comment">//2</span></div><div class="line"></div><div class="line"><span class="comment">//设置原始数据也会影响Vue对象</span></div><div class="line">data.a=<span class="number">3</span></div><div class="line">vm.a</div></pre></td></tr></table></figure>
<h4 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> data = &#123;<span class="attr">a</span>:<span class="number">1</span>&#125;</div><div class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</div><div class="line">  <span class="attr">el</span>: <span class="string">"#example"</span>,</div><div class="line">  <span class="attr">data</span>: data</div><div class="line">&#125;)</div><div class="line"></div><div class="line">vm.$data === data</div><div class="line">vm.$el === <span class="built_in">document</span>.getElementById(<span class="string">'example'</span>)</div><div class="line"></div><div class="line"><span class="comment">// $watch是一个实例方法</span></div><div class="line">vm.$watch(<span class="string">'a'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">newVal,oldVal</span>)</span>&#123;</div><div class="line">  <span class="comment">//该方法将在`vm.a改变后被调用`</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="实例生命周期"><a href="#实例生命周期" class="headerlink" title="实例生命周期"></a>实例生命周期</h3><p>create-&gt;mounted-&gt;updated-&gt;destroyed</p>
<p><code>this</code>用于指向调用它的实例<br><img src="https://cn.vuejs.org/images/lifecycle.png" alt=""></p>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/02/08/vue02.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Vue.js学习I(基本使用)</title>
      <link>http://lchiffon.github.io/2017/02/07/vue01.html</link>
      <guid>http://lchiffon.github.io/2017/02/07/vue01.html</guid>
      <pubDate>Tue, 07 Feb 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;VUE-JS&quot;&gt;&lt;a href=&quot;#VUE-JS&quot; class=&quot;headerlink&quot; title=&quot;VUE.JS&quot;&gt;&lt;/a&gt;VUE.JS&lt;/h1&gt;&lt;p&gt;有用的链接:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="VUE-JS"><a href="#VUE-JS" class="headerlink" title="VUE.JS"></a>VUE.JS</h1><p>有用的链接:</p>
<ul>
<li><a href="https://github.com/vuejs/awesome-vue#libraries--plugins" target="_blank" rel="external">Vue生态库</a></li>
<li><a href="https://github.com/vuejs/vue" target="_blank" rel="external">Github</a></li>
<li><a href="https://jsfiddle.net/chrisvfritz/50wL7mdz/" target="_blank" rel="external">在线编辑器</a></li>
<li><a href="https://cn.vuejs.org" target="_blank" rel="external">中文VUE教程网站</a></li>
<li><a href="https://cn.vuejs.org/v2/api" target="_blank" rel="external">API文档</a></li>
</ul>
<p>VUE笔记, 手打代码与文档于<a href="https://cn.vuejs.org" target="_blank" rel="external">中文VUE教程网站</a></p>
<h2 id="第一部分-简介"><a href="#第一部分-简介" class="headerlink" title="第一部分 简介"></a>第一部分 简介</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Vue.js 是一套轻量级js框架, 可以用于构建自己相关的html服务等.<br>Vue.js在设计之初的目标是通过尽可能简单的API去实现响应数据绑定和组合的视图套件</p>
<p>特性:</p>
<ul>
<li><a href="https://cn.vuejs.org/v2/guide/single-file-components.html" target="_blank" rel="external">单文件组件支持</a></li>
<li><a href="https://github.com/vuejs/awesome-vue#libraries--plugins" target="_blank" rel="external">Vue生态库</a></li>
<li><a href="https://github.com/vuejs/vue" target="_blank" rel="external">Github</a></li>
<li><a href="https://jsfiddle.net/chrisvfritz/50wL7mdz/" target="_blank" rel="external">在线编辑器</a></li>
<li><a href="https://cn.vuejs.org" target="_blank" rel="external">中文VUE教程网站</a></li>
</ul>
<p>引用:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'https://unpkg.com/vue/dist/vue.js'</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>vue与vue-cli:<br>vue-cli是vue的一个命令行工具, 在熟悉vue之后会进行学习.</p>
<h3 id="声明式渲染"><a href="#声明式渲染" class="headerlink" title="声明式渲染"></a>声明式渲染</h3><h4 id="例子1"><a href="#例子1" class="headerlink" title="例子1"></a>例子1</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">  \&#123;\&#123; message &#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</div><div class="line">  <span class="attr">el</span>: <span class="string">'#app'</span>,</div><div class="line">  <span class="attr">data</span>: &#123;</div><div class="line">    <span class="attr">message</span>: <span class="string">'Hello Vue!'</span></div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>JS中将app与html的DOM绑定到了一起, 所以可以在浏览器中的控制台中更改: <code>app.message=&quot;XXX&quot;</code>来<br>动态修改DOM, (也就可以避免使用jQuery+ifelse去做判断更新的复杂代码).</p>
<h4 id="例子2"><a href="#例子2" class="headerlink" title="例子2"></a>例子2</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-2"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind:title</span>=<span class="string">"message"</span>&gt;</span></div><div class="line">    Hover your mouse over me for a few seconds to see my dynamically bound title!</div><div class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> app2 = <span class="keyword">new</span> Vue(&#123;</div><div class="line">  <span class="attr">el</span>: <span class="string">'#app-2'</span>,</div><div class="line">  <span class="attr">data</span>: &#123;</div><div class="line">    <span class="attr">message</span>: <span class="string">'You loaded this page on '</span> + <span class="keyword">new</span> <span class="built_in">Date</span>()</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>这个例子里面用VUE绑定了一个DOM, <code>v-bind</code>被称为一个<strong>指令</strong>, 以<code>v-</code>开头代表是一个Vue.js<br>的特殊属性, 就像Agular中的<code>ng-</code>一样.这句指令(<code>v-bind:title=&quot;message&quot;</code>)代表将这个DOM的<br><code>title</code>属性与Vue实例的<code>message</code>绑定到一起.</p>
<p>同样的, 在控制台中可以使用<code>app2.message=&#39;Other commments&#39;</code>进行更新.</p>
<h3 id="条件与循环"><a href="#条件与循环" class="headerlink" title="条件与循环"></a>条件与循环</h3><h4 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-3"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"seen"</span>&gt;</span></div><div class="line">    Now U C ME<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> app3 = <span class="keyword">new</span> Vue(&#123;</div><div class="line">    <span class="attr">el</span>: <span class="string">"#app-3"</span>,</div><div class="line">    <span class="attr">data</span>: &#123;</div><div class="line">      <span class="attr">seen</span>: <span class="literal">true</span></div><div class="line">    &#125;</div><div class="line">  &#125;)</div></pre></td></tr></table></figure>
<p>这里例子中有一个<code>v-if</code>的属性, 代表如果是true, 将进行显示, 否则不显示.<br>控制台中用<code>app3.seen=false</code>进行隐藏. 过渡中有<a href="https://cn.vuejs.org/v2/guide/transitions.html" target="_blank" rel="external">可以有隐藏效果</a></p>
<h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">'app-4'</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ol</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"todo in todos"</span>&gt;</span></div><div class="line">      \&#123;\&#123; todo.text &#125;&#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> app4 = <span class="keyword">new</span> Vue(&#123;</div><div class="line">  <span class="attr">el</span>: <span class="string">"#app-4"</span>,</div><div class="line">  <span class="attr">data</span>: &#123;</div><div class="line">    <span class="attr">todos</span>: [</div><div class="line">      &#123;<span class="attr">text</span>: <span class="string">'Learn JS'</span>&#125;,</div><div class="line">      &#123;<span class="attr">text</span>: <span class="string">'Learn Vue'</span>&#125;,</div><div class="line">      &#123;<span class="attr">text</span>: <span class="string">'Build Something awesome'</span>&#125;</div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>可以用<code>app4.todos.push({text:&#39;new message!&#39;})</code>来更新一个新的内容~</p>
<h3 id="处理用户输入"><a href="#处理用户输入" class="headerlink" title="处理用户输入"></a>处理用户输入</h3><h4 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h4><p><code>v-on</code>用于绑定事件,Vue中的methods实现方法的定义.<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-5"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>\&#123;\&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"reverseMessage"</span>&gt;</span>Reverse Message<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</div><div class="line">  <span class="attr">el</span>: <span class="string">'#app-5'</span>,</div><div class="line">  <span class="attr">data</span>: &#123;</div><div class="line">    <span class="attr">message</span>: <span class="string">'Hello Vue.js!'</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">methods</span>:&#123;</div><div class="line">    <span class="attr">reverseMessage</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">      <span class="keyword">this</span>.message = <span class="keyword">this</span>.message.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h4 id="双向绑定"><a href="#双向绑定" class="headerlink" title="双向绑定"></a>双向绑定</h4><p><code>v-model</code>用于绑定DOM和输入<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-6"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>\&#123;\&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> app6 = <span class="keyword">new</span> Vue(&#123;</div><div class="line">  <span class="attr">el</span>: <span class="string">"#app-6"</span>,</div><div class="line">  <span class="attr">data</span>: &#123;</div><div class="line">    <span class="attr">message</span>: <span class="string">"Hello Vue~"</span></div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="构造用户组件"><a href="#构造用户组件" class="headerlink" title="构造用户组件"></a>构造用户组件</h3><p>这部分稍微有点抽象,过程是这样的:</p>
<ol>
<li>用Vue定义一个新的DOM, 如教程中所讲, 一个组件实质上是一个有预定义选项的Vue实例</li>
<li>模板中写入组件</li>
<li>对这个组件绑定数据</li>
</ol>
<p><code>Vue.component</code>定义DOM, <code>props</code>定义传入对象, <code>templates</code>决定输出内容<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-7"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ol</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tool-set</span> <span class="attr">v-for</span>=<span class="string">"a in todoList"</span> <span class="attr">v-bind:todo</span>=<span class="string">"a"</span>&gt;</span><span class="tag">&lt;/<span class="name">tool-set</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Vue.component(<span class="string">"tool-set"</span>,&#123;</div><div class="line">  <span class="attr">props</span>:[<span class="string">'todo'</span>],</div><div class="line">  <span class="attr">template</span>:<span class="string">'&lt;li&gt;\&#123;\&#123;todo.text&#125;&#125;&lt;/li&gt;'</span></div><div class="line">&#125;)</div><div class="line"><span class="keyword">var</span> app7 = <span class="keyword">new</span> Vue(&#123;</div><div class="line">  <span class="attr">el</span>:<span class="string">"#app-7"</span>,</div><div class="line">  <span class="attr">data</span>: &#123;</div><div class="line">    <span class="attr">todoList</span>: [</div><div class="line">      &#123;<span class="attr">text</span>: <span class="string">"No.1"</span>&#125;,</div><div class="line">      &#123;<span class="attr">text</span>: <span class="string">"No.2"</span>&#125;,</div><div class="line">      &#123;<span class="attr">text</span>: <span class="string">"No.3"</span>&#125;</div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/02/07/vue01.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>leafletCN</title>
      <link>http://lchiffon.github.io/2017/01/07/leafletCN.html</link>
      <guid>http://lchiffon.github.io/2017/01/07/leafletCN.html</guid>
      <pubDate>Sat, 07 Jan 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;leafletCN是一个基于&lt;a href=&quot;https://github.com/rstudio/leaflet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;leaflet&lt;/a&gt;的中国扩展包, 里面保存了一些适用于中国的区域划分数据以及一些有帮助的函
      
      </description>
      
      <content:encoded><![CDATA[<p>leafletCN是一个基于<a href="https://github.com/rstudio/leaflet" target="_blank" rel="external">leaflet</a>的中国扩展包, 里面保存了一些适用于中国的区域划分数据以及一些有帮助的函数, 地理区划数据来源于github的<a href="https://github.com/longwosion/geojson-map-china" target="_blank" rel="external">geojson-map-china</a>项目. 数据细分到县级市.</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">## 稳定版</div><div class="line">install.packages(&quot;leafletCN&quot;)</div><div class="line">## 开发版</div><div class="line">devtools::install_github(&quot;lchiffon/leafletCN&quot;)</div></pre></td></tr></table></figure>
<h3 id="常用的函数"><a href="#常用的函数" class="headerlink" title="常用的函数"></a>常用的函数</h3><ul>
<li><code>regionNames</code> 返回某个地图的区域名</li>
<li><code>demomap</code> 传入地图名绘制示例地图</li>
<li><code>geojsonMap</code> 将一个分层颜色图绘制在一个实时地图上</li>
</ul>
<p>其他辅助leaflet包使用的函数</p>
<ul>
<li><code>amap</code> 在leaflet地图上叠加高德地图</li>
<li><code>read.geoShape</code> 读取一个geojson的对象,保存成spdataframe,以方便leaflet调用</li>
<li><code>leafletGeo</code>用地图名以及一个数据框创建一个sp的对象</li>
</ul>
<h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><h4 id="regionNames"><a href="#regionNames" class="headerlink" title="regionNames"></a><em>regionNames</em></h4><p>传入需要查看的城市名, 显示这个城市支持的区域信息, 比如查看成都:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">regionNames(&quot;成都&quot;)</div><div class="line">[1] &quot;成华区&quot;   &quot;崇州市&quot;   &quot;大邑县&quot;   &quot;都江堰市&quot; &quot;金牛区&quot;  </div><div class="line">[6] &quot;金堂县&quot;   &quot;锦江区&quot;   &quot;龙泉驿区&quot; &quot;彭州市&quot;   &quot;蒲江县&quot;  </div><div class="line">[11] &quot;青白江区&quot; &quot;青羊区&quot;   &quot;双流县&quot;   &quot;温江区&quot;   &quot;武侯区&quot;  </div><div class="line">[16] &quot;新都区&quot;   &quot;新津县&quot;   &quot;邛崃市&quot;   &quot;郫县&quot;</div></pre></td></tr></table></figure></p>
<p>如果不传入对象, 会自动返回300多个支持的名字列表,包括各个城市,省,以及三个特殊的名字:</p>
<ol>
<li><code>world</code>世界地图</li>
<li><code>china</code>中国分省份地图</li>
<li><code>city</code>中国分城市地图</li>
</ol>
<h4 id="demomap"><a href="#demomap" class="headerlink" title="demomap"></a><em>demomap</em></h4><p>传入城市名,显示这个城市的示例地图</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">demomap(&quot;台湾&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://7xr5em.com1.z0.glb.clouddn.com/demo1.png" alt=""></p>
<h4 id="geojsonmap"><a href="#geojsonmap" class="headerlink" title="geojsonmap"></a><em>geojsonmap</em></h4><p>将一个数据框显示在需要展示的地图上.<br>在函数中做了一些有趣的设置, leafletCN会自动匹配传入的前两个字符来寻找合适的位置进行绘制,<br>所以基本不需要纠结是写’上海市’还是’上海’了</p>
<p>图做出来可以在上面点点点…</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dat = data.frame(name = regionNames(&quot;china&quot;),</div><div class="line">                 value = runif(34))</div><div class="line">geojsonMap(dat,&quot;china&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://7xr5em.com1.z0.glb.clouddn.com/demo2.png" alt=""></p>
<h5 id="geojsonmap-的参数"><a href="#geojsonmap-的参数" class="headerlink" title="geojsonmap 的参数"></a><em>geojsonmap</em> 的参数</h5><ul>
<li>还没开始写噗哈哈, 只写了帮助文档, 求PR</li>
</ul>
<h3 id="辅助函数"><a href="#辅助函数" class="headerlink" title="辅助函数"></a>辅助函数</h3><h4 id="amap"><a href="#amap" class="headerlink" title="amap"></a><em>amap</em></h4><p>叠加一个高德地图, 使用:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">leaflet() %&gt;%</div><div class="line">  amap() %&gt;%  </div><div class="line">  addMarkers(lng=116.3125774825, lat=39.9707249401, popup=&quot;The birthplace of COS&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://7xr5em.com1.z0.glb.clouddn.com/demo3.png" alt=""></p>
<h4 id="read-geoShape"><a href="#read-geoShape" class="headerlink" title="read.geoShape"></a><em>read.geoShape</em></h4><p><code>read.geoShape</code>这个函数可以把一个geojson格式的数据读取为一个<code>SpatialPolygonsDataFrame</code>对象, 方便sp或者leaflet包中的调用.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">if(require(sp))&#123;</div><div class="line">  filePath = system.file(&quot;geojson/china.json&quot;,package = &quot;leafletCN&quot;)</div><div class="line">  map = read.geoShape(filePath)</div><div class="line">  plot(map)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://7xr5em.com1.z0.glb.clouddn.com/demo4.png" alt=""></p>
<h4 id="leafletGeo"><a href="#leafletGeo" class="headerlink" title="leafletGeo"></a><em>leafletGeo</em></h4><p><code>leafletGeo</code>这个函数可以把一个数据框和一个地图组合在一起, 方便用leaflet调用, 其中名字的<br>变量为<code>name</code>, 数值的变量为<code>value</code>~</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">if(require(leaflet))&#123;</div><div class="line">  dat = data.frame(regionNames(&quot;china&quot;),</div><div class="line">                                runif(34))</div><div class="line">  map = leafletGeo(&quot;china&quot;, dat)</div><div class="line"></div><div class="line">   pal &lt;- colorNumeric(</div><div class="line">     palette = &quot;Blues&quot;,</div><div class="line">     domain = map$value)</div><div class="line"></div><div class="line">  leaflet(map) %&gt;% addTiles() %&gt;%</div><div class="line">     addPolygons(stroke = TRUE,</div><div class="line">     smoothFactor = 1,</div><div class="line">     fillOpacity = 0.7,</div><div class="line">     weight = 1,</div><div class="line">     color = ~pal(value),</div><div class="line">     popup = ~htmltools::htmlEscape(popup)</div><div class="line">     ) %&gt;%</div><div class="line">   addLegend(&quot;bottomright&quot;, pal = pal, values = ~value,</div><div class="line">                        title = &quot;legendTitle&quot;,</div><div class="line">                 labFormat = leaflet::labelFormat(prefix = &quot;&quot;),</div><div class="line">                 opacity = 1)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://7xr5em.com1.z0.glb.clouddn.com/demo5.png" alt=""></p>
<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p><a href="http://langdawei.com/2017/01/07/aqi.html" target="_blank" rel="external">十行代码完成空气质量的可视化</a></p>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/01/07/leafletCN.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>十行代码看到AQI</title>
      <link>http://lchiffon.github.io/2017/01/07/aqi.html</link>
      <guid>http://lchiffon.github.io/2017/01/07/aqi.html</guid>
      <pubDate>Sat, 07 Jan 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;我错了, 我承认我是标题党, 怎么可能用十行代码完成全国三百个多个城市AQI的抓取, 清洗与可视化&lt;/p&gt;
&lt;p&gt;我仔细数了数, 去掉注释, 一共是11行…&lt;/p&gt;
&lt;p&gt;AQI是空气质量指数（Air Quality Index，简称AQI）是定量描述空气质量状况的无量纲指
      
      </description>
      
      <content:encoded><![CDATA[<p>我错了, 我承认我是标题党, 怎么可能用十行代码完成全国三百个多个城市AQI的抓取, 清洗与可视化</p>
<p>我仔细数了数, 去掉注释, 一共是11行…</p>
<p>AQI是空气质量指数（Air Quality Index，简称AQI）是定量描述空气质量状况的无量纲指数.</p>
<p>对于最近的空气质量, 我无话可说, 只好先讲个段子(没有干货段子凑, 网侵删):</p>
<p><em>受朋友委托，大家帮个忙：北京人，女，26岁，未婚，1.68米，体重50公斤，英国海归。貌美，爱好健身。目前在一家世界500强做产品经理，工作稳定，年薪近90万。三环内有四套学区房，一套按揭，三套全款。 名下有一辆宝马7系，上班时开。父母均是国家领导干部。朋友和家人现在非常着急，想让介绍一个效果比较好的防霾口罩。</em></p>
<p>[手动债见]</p>
<p>咳咳, 回归正题, 在十一行代码之前, 先介绍下出场的两个包, 单library这些包就占掉了快20%的代码量.</p>
<h4 id="rvest"><a href="#rvest" class="headerlink" title="rvest"></a><em>rvest</em></h4><p> <a href="https://github.com/hadley/rvest" target="_blank" rel="external">rvest</a>, 一个较新的数据抓取包,类似py的beautiful soup, 在不考虑cookie代理get/post等情况下, 比Rcurl与XML用起来方便, 但话说回来, 爬虫最大工作量也并不一定是写代码.</p>
<p> 其中抓取用的是CSS selector的语法, 和Xpath略有区别,想快速学习的话可以去这里学下<a href="http://flukeout.github.io/" target="_blank" rel="external">怎么选果冻</a></p>
<h4 id="leafletCN"><a href="#leafletCN" class="headerlink" title="leafletCN"></a><em>leafletCN</em></h4><p><a href="https://github.com/lchiffon/leafletCN" target="_blank" rel="external">leafletCN</a> 是一个基于<a href="https://github.com/rstudio/leaflet" target="_blank" rel="external">leaflet</a>包做的大中华扩展,<br>优势在于有细分到<strong>县级市</strong>级别的区划数据, 虽然没那么准, 但是也基本能用了~</p>
<p><em>这玩意连个文档都没有. 作者真懒.</em></p>
<p>好了, 以下是代码, 运行之后会出现一个以高德地图为底图, 可缩放可点击的结果</p>
<p>Windows用户<strong>可能需要</strong>运行注释中我标的内容~</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># install.packages("rvest")</span></div><div class="line"><span class="comment"># install.packages("leafletCN")</span></div><div class="line"><span class="comment"># windows:</span></div><div class="line"><span class="comment">#   Sys.setlocale("LC_CTYPE", "eng")</span></div><div class="line"><span class="comment">## GAME begin~</span></div><div class="line"><span class="keyword">library</span>(rvest)</div><div class="line"><span class="keyword">library</span>(leafletCN)</div><div class="line"><span class="comment"># Sys.setlocale("LC_CTYPE", "eng")</span></div><div class="line">doc = read_html(<span class="string">"http://www.pm25s.com/cn/rank/"</span>)</div><div class="line"><span class="comment">## http://flukeout.github.io/</span></div><div class="line">cities = doc %&gt;% html_nodes(<span class="string">".cityrank a"</span>) %&gt;%</div><div class="line">  html_text()</div><div class="line"><span class="comment"># windows:</span></div><div class="line"><span class="comment">#   cities = iconv(cities, "UTF-8", "UTF-8")</span></div><div class="line">AQI = doc %&gt;% html_nodes(<span class="string">"span[class^='lv']"</span>) %&gt;%</div><div class="line">  html_text() %&gt;% .[c(<span class="literal">F</span>,<span class="literal">F</span>,<span class="literal">T</span>)] %&gt;% as.numeric</div><div class="line">dat = data.frame(city = cities, AQI = AQI)</div><div class="line">geojsonMap(dat, <span class="string">"city"</span>,</div><div class="line">           popup =  paste0(dat$city,<span class="string">":"</span>,dat$AQI),</div><div class="line">           palette = <span class="string">"Reds"</span>, legendTitle = <span class="string">"AQI"</span>)</div></pre></td></tr></table></figure>
<p><img src="http://7xr5em.com1.z0.glb.clouddn.com/Rplot.png"></p>
<p>亮点自寻, 欢迎点赞~</p>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/01/07/aqi.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hexo从头搭建自己的博客</title>
      <link>http://lchiffon.github.io/2017/01/05/hexo.html</link>
      <guid>http://lchiffon.github.io/2017/01/05/hexo.html</guid>
      <pubDate>Thu, 05 Jan 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;已然从jekyll的坑跳了出来, 转向了hexo来构建自己的博客, 尤其是在windows下, 再也不需要繁琐的设置源, 每次要用额外的命令来构建server, 赞hexo. &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hexo.io/&quot; targe
      
      </description>
      
      <content:encoded><![CDATA[<p><em>已然从jekyll的坑跳了出来, 转向了hexo来构建自己的博客, 尤其是在windows下, 再也不需要繁琐的设置源, 每次要用额外的命令来构建server, 赞hexo. </em></p>
<p><a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>是一个node.js的库, 是一个快速、简洁且高效的博客框架, hexo的社区有很多好玩的主题, 插件, 里面也有很多中国的开发者, 当然是以前端开发为主. 这篇博客会介绍用hexo搭建自己的<strong>数据</strong>博客的过程</p>
<p>以下是基本流程, 如果本篇有内容不清楚的过程, 可以根据这个流程查看<a href="https://hexo.io/docs/" target="_blank" rel="external">官方文档</a></p>
<p>完成这些工作后, 预期可以得到一个自己的网站, 也就是从头到尾搭建自己的网站, (需要买一个顶级域名来实现微信不屏蔽你的博客) 预计工作量如下: </p>
<p>windows + 完全不懂编程: 8h<br>熟悉git+github: 4h<br>熟悉git+github+node: 1h<br>熟悉git+github+以前有jekyll博客: 48h(迁移的故事太心酸)</p>
<p>相较于微信公众号和知乎,显然搞这个更有成就感嘛..</p>
<ul>
<li>前期准备<ol>
<li>安装node.js<ul>
<li><a href="https://nodejs.org/en/" target="_blank" rel="external">https://nodejs.org/en/</a></li>
</ul>
</li>
<li>安装git<ul>
<li><a href="https://git-scm.com/" target="_blank" rel="external">https://git-scm.com/</a></li>
</ul>
</li>
<li>安装hexo</li>
<li>注册github<ul>
<li>新建一个名为[username].github.io的repo</li>
</ul>
</li>
</ol>
</li>
<li>博客构建<ol>
<li>hexo init</li>
<li>主题选择与设置</li>
<li>开始写博客吧</li>
<li>部署</li>
</ol>
</li>
<li>其他问题<ol>
<li>插件与域名</li>
</ol>
</li>
</ul>
<h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><h4 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a><em>node.js</em></h4><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境. 如果你对前端的东西不是很熟, 可以忽略前一句, 直接把这个软件装好.<br>下载网址在:</p>
<ul>
<li><a href="https://nodejs.org/en/" target="_blank" rel="external">https://nodejs.org/en/</a></li>
</ul>
<p>Windows 用户可以直接安装, 如果你是Linux/Mac的用户, 还需要额外设置一下node的环境变量</p>
<p>以保证在命令行(cmd)中运行 <code>node --version</code> 可以看到版本号,比如我的就是v6.9.2:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> node --version</div><div class="line">v6.9.2</div></pre></td></tr></table></figure>
<p>node 会给你的电脑中安装两个命令,一个是node, JavaScript运行环境, 另外一个是npm (node package manager), 前者基本不会被用到, 后者等下会有一些使用,安装一些需要的包.</p>
<h4 id="git"><a href="#git" class="headerlink" title="git"></a><em>git</em></h4><p>Git是一款免费、开源的分布式版本控制系统, 作用是处理各式各样版本管理, 文件管理的工作, 在博客搭建中, 它起到与Github沟通, 传输, 部署文件的工作.</p>
<p>安装可以参考廖雪峰的博客<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000/" target="_blank" rel="external">安装Git</a> 三种系统都讲的比较细致.</p>
<ul>
<li>Windows用户可以在<a href="https://git-scm.com/" target="_blank" rel="external">https://git-scm.com/</a>进行下载安装</li>
<li>Ubuntu/Debian用户使用 <code>sudo apt-get install git</code> 安装</li>
<li>Mac用户可以用AppStore安装Xcode，Xcode集成了Git，不过默认没有安装，你需要运行Xcode，选择菜单“Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择“Command Line Tools”，点“Install”就可以完成安装了</li>
</ul>
<p><strong>这个必须要做,否则后面的部署不能成功执行</strong><br>安装完毕之后, 需要设定下自己的名字已经邮箱, 在命令行(git bash)中执行:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> git config --global user.name "Your Name"</div><div class="line"><span class="meta">$</span> git config --global user.email "email@example.com"</div></pre></td></tr></table></figure></p>
<h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h4><p>打开你的命令行工具(cmd, git bash, terminal …随便选一个就好,推荐windows用户用git bash, 就在自己的开始菜单里, 其他的用户天生就会命令行)</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-cli -g</div></pre></td></tr></table></figure>
<p>等<a href="http://langdawei.com/coffee/index.html" target="_blank" rel="external">一杯咖啡</a>的时间, 安装好了之后, 看下<code>hexo --version</code> 能否成功执行.</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> hexo --version</div><div class="line">hexo-cli: 1.0.2</div><div class="line">os: Windows_NT 6.1.7601 win32 x64</div><div class="line">http_parser: 2.7.0</div><div class="line">node: 6.9.2</div><div class="line">v8: 5.1.281.88</div><div class="line">uv: 1.9.1</div><div class="line">zlib: 1.2.8</div><div class="line">ares: 1.10.1-DEV</div><div class="line">icu: 57.1</div><div class="line">modules: 48</div><div class="line">openssl: 1.0.2j</div></pre></td></tr></table></figure>
<h4 id="github注册"><a href="#github注册" class="headerlink" title="github注册"></a>github注册</h4><p><a href="https://github.com/" target="_blank" rel="external">Github</a>是一个~与A站与B站齐名, 三大同性交友的网站~面向开源及私有软件项目的托管平台.</p>
<p>注册与使用Github的原因是它可以免费为你提供一个开放的托管静态页面的网站, 不限流量, 完全免费.<br>注册我就不提了, 注册好了以后, 点加号, 按New Repository, 新建一个名为[username].github.io的repo.<br>比如我的用户名为lchiffon, 新建的repo就是<code>lchiffon.github.io</code>,建好就可以啦, 这步搞定.</p>
<h3 id="博客构建"><a href="#博客构建" class="headerlink" title="博客构建"></a>博客构建</h3><h4 id="init"><a href="#init" class="headerlink" title="init"></a>init</h4><p>在一个空的文件夹中进入命令行工具, (可以试试点击右键,并点击 Git Bash Here, 如果没有, 可以选择重装git 或者查下<a href="http://www.baidu.com/s?ie=utf-8&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=1&amp;tn=baidu&amp;wd=cd%E8%BF%99%E4%B8%AA%E5%91%BD%E4%BB%A4%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8&amp;oq=git%20%E5%AE%89%E8%A3%85&amp;rsv_pq=a8447baf0001ef9c&amp;rsv_t=222dUpzNBVPcyA3Hyv4RQH8l9tAj6SYjUco0pklfzobkzt%2FmKn8dsHWLvlc&amp;rqlang=cn&amp;rsv_enter=0&amp;inputT=1053&amp;rsv_n=2&amp;rsv_sug3=46&amp;rsv_sug4=1053" target="_blank" rel="external">cd这个命令怎么使用</a>)<br>并执行:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure>
<p>等一系列命令完成后, 执行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s</div></pre></td></tr></table></figure>
<p>当你看到以下命令代表执行成功, 可以用浏览器打开这个网页:<code>http://localhost:4000/</code>来查看自己搭建的博客</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INFO  Start processing</div><div class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure>
<p><img src="https://hexo.io/build/screenshots/landscape-60eb5ae7c8.png" alt=""></p>
<p>localhost代表的是你自己的本地服务, 把这个分享给朋友可不能打开, 需要上传到github,来分享给其他人</p>
<h4 id="写点什么"><a href="#写点什么" class="headerlink" title="写点什么"></a>写点什么</h4><p>在source/_post文件夹中, 有一个<code>hello-world.md</code>的文件, 按照这个例子写一个自己的文章,也是在这个文件夹中.<br><a href="http://sspai.com/25137" target="_blank" rel="external">markdown的语法可以看这里</a></p>
<p>写好之后刷新下<code>http://localhost:4000/</code>, 你就能看到自己的文章了~</p>
<h4 id="提交到github"><a href="#提交到github" class="headerlink" title="提交到github"></a>提交到github</h4><p>对于提交,需要修改文件夹中的<code>_config.yml</code>, 把里面deploy相关的修改成:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: http://github.com/[username]/[username].github.io</div></pre></td></tr></table></figure>
<p>[username]替换成自己的用户名,不加方括号</p>
<p>然后使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure></p>
<p>来推送到github</p>
<p>稍等一段时间,就可以在<code>http://[username].github.io</code>来查看你自己的博客了~</p>
<h3 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h3><h4 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h4><p>基本的 theme就是你看到的挫样子, 可以去<a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a>选一款主题,并按照主题的readme去进行设置</p>
<p>一般操作是:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone [themerepo] themes/[themename]</div></pre></td></tr></table></figure></p>
<p>然后修改<code>_config.yml</code>, 把里面<code>theme: landscape</code>修改成:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: [themename]</div></pre></td></tr></table></figure>
<p>之后可能依赖不同的theme去设置theme的参数(<code>themes/[themename]/_config.yml</code>)文件</p>
<h4 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h4><p>老bloger们都懂RSS是什么,也就是传说中的RSS订阅,生成方式是:</p>
<ol>
<li>安装<code>npm install hexo-generator-feed</code></li>
<li>修改<code>_config.yml</code></li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">plugin:</div><div class="line">- hexo-generator-feed</div><div class="line">feed:</div><div class="line">  type: rss2</div><div class="line">  path: rss2.xml</div><div class="line">  limit: 20</div></pre></td></tr></table></figure>
<h4 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h4><p>申请域名,然后加入以下三个CDN记录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@        A        192.30.252.153</div><div class="line">@        A        192.30.252.154</div><div class="line">www      CNAME    username.github.io.</div></pre></td></tr></table></figure>
<p>并在自己的项目中写一个CNAME的文件里面包含自己申请的域名(不包含<a href="http://www部分" target="_blank" rel="external">http://www部分</a>)</p>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/01/05/hexo.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>新年快乐|最后一更</title>
      <link>http://lchiffon.github.io/2017/01/01/newYear.html</link>
      <guid>http://lchiffon.github.io/2017/01/01/newYear.html</guid>
      <pubDate>Sun, 01 Jan 2017 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;新年快乐&lt;/p&gt;
&lt;p&gt;2016年过得好快~&lt;/p&gt;
&lt;p&gt;上半年还在携程起起伏伏, 准备老老实实做项目, 后来接下来了J.D. Power的offer开始从分析师走向全栈的路上.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3月沙巴,想再去潜一次水&lt;/li&gt;
&lt;li&gt;4月西藏,找到了自己的
      
      </description>
      
      <content:encoded><![CDATA[<p>新年快乐</p>
<p>2016年过得好快~</p>
<p>上半年还在携程起起伏伏, 准备老老实实做项目, 后来接下来了J.D. Power的offer开始从分析师走向全栈的路上.</p>
<ul>
<li>3月沙巴,想再去潜一次水</li>
<li>4月西藏,找到了自己的信仰(辣椒好吃)</li>
<li>5月JDpower</li>
<li>6月写出了wordcloud2</li>
<li>7月正式入职,开始搬砖</li>
<li>8月浙软开始上课</li>
<li>9月搞了一台高配置的机器但在ubuntu上装了steam</li>
<li>10月~12月 参加了杭州,厦门,上海三场R会,下定决心明年搞meetup</li>
</ul>
<p>年初列的计划完成了一半, 至少写文的计划基本全部搁浅, 计划40篇, 只写了12篇, 看来今年我要少计划一点了,</p>
<p>先说<a href="http://lchiffon.github.io/2016/01/01/newyear.html">年初计划</a>完成程度:</p>
<ul>
<li>REmap: 40% 没写htmlwidgets,做好shiny</li>
<li>recharts: 协助更新做到了</li>
<li>APItools: 没计划改版, 而且百度真的改版了</li>
<li>图像分析: 真给mxnet一个PR, 蠢到自己不想讲下去</li>
<li>博客改版: 妥妥推到明年</li>
<li>40篇文章: 完成12篇</li>
</ul>
<p>wishList 完成了60%,显卡西藏海滩完成了</p>
<p>列列2017新年的计划吧~</p>
<ul>
<li>新版博客</li>
<li>20篇blog+20本书</li>
<li>10场meetup</li>
<li>3个package(有一个已经快做完了hhh)</li>
<li>5场会议</li>
<li>100种水生动物</li>
<li>如果以上能做完,争取把自己的事情搞定</li>
</ul>
<p>哦,对了还有一个wishlist:</p>
<ol>
<li>BenQ TH670</li>
<li>Turkey</li>
<li>Beach</li>
<li>zx1</li>
<li>QC35</li>
</ol>
<p>不要紧张, 这个或许是<strong>旧版</strong>的最后一更了吧~</p>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/01/01/newYear.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>常用R包</title>
      <link>http://lchiffon.github.io/2016/11/13/Packages.html</link>
      <guid>http://lchiffon.github.io/2016/11/13/Packages.html</guid>
      <pubDate>Sun, 13 Nov 2016 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;最近略忙, 没有太多时间更新博客, 这是前段时间做的一个简单的汇总, 有价值的R包.&lt;br&gt;计划明年年初的时候换掉博客的架构, 投身HEXO, 顺便连起公众号…(上一个公众号已经因为太久不&lt;br&gt;更新被微信冻结了,hhh~)&lt;/p&gt;
&lt;p&gt;网页请点击&lt;a href=&quot;htt
      
      </description>
      
      <content:encoded><![CDATA[<p>最近略忙, 没有太多时间更新博客, 这是前段时间做的一个简单的汇总, 有价值的R包.<br>计划明年年初的时候换掉博客的架构, 投身HEXO, 顺便连起公众号…(上一个公众号已经因为太久不<br>更新被微信冻结了,hhh~)</p>
<p>网页请点击<a href="http://lchiffon.github.io/reveal_slidify/slides/packages/index.html?theme=sky#/slide-1">http://lchiffon.github.io/reveal_slidify/slides/packages/index.html?theme=sky#/slide-1</a></p>
<p><br></p>
<h3 id="请使用Chorme浏览器"><a href="#请使用Chorme浏览器" class="headerlink" title="请使用Chorme浏览器"></a>请使用Chorme浏览器</h3><p><br><br></p>
<iframe src="http://lchiffon.github.io/reveal_slidify/slides/packages/index.html?theme=sky#/slide-1" height="400px" width="95%"></iframe>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2016/11/13/Packages.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>REmap分享</title>
      <link>http://lchiffon.github.io/2016/07/30/xqcourse.html</link>
      <guid>http://lchiffon.github.io/2016/07/30/xqcourse.html</guid>
      <pubDate>Sat, 30 Jul 2016 00:00:00 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;基本介绍&quot;&gt;&lt;a href=&quot;#基本介绍&quot; class=&quot;headerlink&quot; title=&quot;基本介绍&quot;&gt;&lt;/a&gt;基本介绍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://lchiffon.github.io/REmap/REmapExamples/N
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h2><ul>
<li><a href="http://lchiffon.github.io/REmap/REmapExamples/Nanchang/?theme=sky#/slide-1">slides</a></li>
<li><a href="http://lchiffon.github.io/REmap/REmapExamples/Nanchang/index.Rmd">slides Rmd</a></li>
<li><a href="https://github.com/lchiffon/REmap" target="_blank" rel="external">Github链接</a></li>
<li><a href="http://blog.csdn.net/yc_1993/article/details/51407981" target="_blank" rel="external">yc_1993:可视化篇：R可视化–迁徙/通勤图</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA3MTM3NTA5Ng==&amp;mid=2651054452&amp;idx=1&amp;sn=e7719b13c1174a024358d43b3d334ed6&amp;scene=1&amp;srcid=0729t5U7XNGCUXZTfTIyr4BH&amp;pass_ticket=2nU9lE1qDt9q520ewexQCXKHI16DYucJRmnbQl5kncRPZ0%2BQkgv9ipHMJ5sGHMs5#rd" target="_blank" rel="external">可视化篇：R可视化–map图</a></li>
</ul>
<h2 id="如何获取帮助"><a href="#如何获取帮助" class="headerlink" title="如何获取帮助"></a>如何获取帮助</h2><ul>
<li>百度/google</li>
<li><a href="https://github.com/lchiffon/REmap/issues" target="_blank" rel="external">issue</a></li>
<li><a href="http://stackoverflow.com" target="_blank" rel="external">stackoverflow</a></li>
</ul>
<h2 id="其他功能介绍"><a href="#其他功能介绍" class="headerlink" title="其他功能介绍"></a>其他功能介绍</h2><h3 id="knitr"><a href="#knitr" class="headerlink" title="knitr"></a>knitr</h3><p><a href="http://lchiffon.github.io/2015/10/27/knitrREmap.html">在knitr中使用REmap</a></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">remap.init()</div><div class="line"><span class="comment">## 绘制地图</span></div><div class="line">p = remap(demoC)</div><div class="line"><span class="comment">## knitr展示</span></div><div class="line">knitrREmap(p,local=<span class="literal">F</span>)</div></pre></td></tr></table></figure>
<h3 id="shiny"><a href="#shiny" class="headerlink" title="shiny"></a>shiny</h3><ul>
<li>D:/Program Files/R/R-3.2.0/library/REmap/shiny/shinyBmap</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(REmap)</div><div class="line"><span class="keyword">library</span>(shiny)</div><div class="line">runApp(system.file(<span class="string">"shiny"</span>,<span class="string">"shinyBmap"</span>, package = <span class="string">"REmap"</span>))</div></pre></td></tr></table></figure>
<h3 id="个性化定制"><a href="#个性化定制" class="headerlink" title="个性化定制"></a>个性化定制</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">options(browser =getOption(<span class="string">"viewer"</span>))</div><div class="line">data(demoC)</div><div class="line"><span class="comment">## Test for Bmap</span></div><div class="line">geoData  = get_geo_position(unique(demoC[demoC==demoC]))</div><div class="line"><span class="comment"># this may take some time,be patient~</span></div><div class="line">remapB(markLineData = demoC,geoData = geoData)</div><div class="line">remapB(markLineData = demoC,geoData = geoData,</div><div class="line">       markLineTheme = markLineControl(color = <span class="string">'red'</span>))</div><div class="line">data(demoC)</div><div class="line">demoC$tooltip = sample(letters,nrow(demoC))</div><div class="line">remapB(markLineData = demoC,geoData = geoData,</div><div class="line">       markLineTheme = markLineControl(color = <span class="string">'red'</span>))</div><div class="line">newdata = data.frame(a = demoC[,<span class="number">2</span>],</div><div class="line">                     color = c(rep(<span class="string">"blue"</span>,<span class="number">5</span>),rep(<span class="string">"red"</span>,<span class="number">5</span>)))</div><div class="line">remapB(markPointData = newdata,</div><div class="line">       color = <span class="string">"Blue"</span>,geoData = geoData)</div><div class="line">newdata$symbolSize = <span class="number">1</span>:<span class="number">10</span></div><div class="line">remapB(markPointData = newdata,</div><div class="line">       color = <span class="string">"Blue"</span>,geoData = geoData)</div><div class="line">newdata$tooltip = paste(newdata$a,newdata$symbolSize,sep = <span class="string">":"</span>)</div><div class="line">remapB(markPointData = newdata,</div><div class="line">       color = <span class="string">"Blue"</span>,geoData = geoData)</div><div class="line">data(chinaIphone)</div><div class="line"><span class="comment">## markLineControl</span></div><div class="line">mapdata = chinaIphone</div><div class="line">geoData  = get_geo_position(unique(demoC[demoC==demoC]))</div><div class="line">out = remapC(data = mapdata,</div><div class="line">             color = c(<span class="string">"white"</span>,<span class="string">"white"</span>),</div><div class="line">             theme=get_theme(<span class="string">"none"</span>,<span class="string">"white"</span>,<span class="string">"white"</span>,<span class="string">"white"</span>,<span class="string">'white'</span>),</div><div class="line">             markPointData = demoC[,<span class="number">2</span>],</div><div class="line">             markPointTheme = markPointControl(</div><div class="line">               symbol = <span class="string">"image://http://lchiffon.github.io/reveal_slidify/pic/ghost.png"</span>,</div><div class="line">               symbolSize = <span class="number">50</span>,</div><div class="line">               effectType = <span class="string">'bounce'</span> ),</div><div class="line">             geoData = geoData)</div><div class="line">out</div></pre></td></tr></table></figure>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2016/07/30/xqcourse.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>wordcloud2 in CRAN</title>
      <link>http://lchiffon.github.io/2016/07/26/installpackage.html</link>
      <guid>http://lchiffon.github.io/2016/07/26/installpackage.html</guid>
      <pubDate>Tue, 26 Jul 2016 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;最近把&lt;code&gt;wordcloud2&lt;/code&gt;发布到了CRAN上,所以,以后就可以直接用&lt;code&gt;install.packages(&amp;#39;wordcloud2&amp;#39;)&lt;/code&gt;进行安装.&lt;/p&gt;
&lt;p&gt;这样是不是这篇博客有点短,我再加个用wordclou
      
      </description>
      
      <content:encoded><![CDATA[<p>最近把<code>wordcloud2</code>发布到了CRAN上,所以,以后就可以直接用<code>install.packages(&#39;wordcloud2&#39;)</code>进行安装.</p>
<p>这样是不是这篇博客有点短,我再加个用wordcloud2 做头像的方法:</p>
<ul>
<li>写一个文件,把你喜欢的词(认识的不认识的)放进去</li>
<li>调整下字数,认识的字少的话可以把文件重复几遍</li>
<li>生成词频,我用的是<code>seq</code>生成,再用一些小的数字去填空白</li>
<li>wordcloud!</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">setwd(<span class="string">'E:/tmp'</span>)</div><div class="line">word = readLines(<span class="string">'chiffon.txt'</span>)&lt;/code&gt;&lt;/pre&gt;</div><div class="line">word1 = c(word,word,word,word,word)</div><div class="line">n = length(word)</div><div class="line">freq = c(n:<span class="number">1</span> + <span class="number">5</span>,</div><div class="line">         rep(<span class="number">15</span>,n),</div><div class="line">         rep(<span class="number">5</span>,n),</div><div class="line">         rep(<span class="number">5</span>,n),</div><div class="line">         rep(<span class="number">5</span>,n))</div><div class="line"><span class="keyword">library</span>(wordcloud2)</div><div class="line">dat = data.frame(word,freq)</div><div class="line"><span class="comment"># wordcloud2(dat,size = 0.3)</span></div><div class="line">letterCloud(dat,<span class="string">'R'</span>, color = <span class="string">'random-light'</span>,</div><div class="line">  backgroundColor = <span class="string">'black'</span>,size = <span class="number">0.3</span>)</div></pre></td></tr></table></figure>
<p><img src="http://7xr5em.com1.z0.glb.clouddn.com/tou.png"></p>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2016/07/26/installpackage.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>FreeCodeCamp,全栈基本功训练馆</title>
      <link>http://lchiffon.github.io/2016/06/22/coder.html</link>
      <guid>http://lchiffon.github.io/2016/06/22/coder.html</guid>
      <pubDate>Wed, 22 Jun 2016 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;em&gt;看完本文,或许能解释一些为什么前端(全栈)是这么吸引人了&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;最近在github上发现了这个叫做&lt;a href=&quot;https://github.com/FreeCodeCamp/FreeCodeCamp&quot; target=&quot;_blank&quot; rel=
      
      </description>
      
      <content:encoded><![CDATA[<p><em>看完本文,或许能解释一些为什么前端(全栈)是这么吸引人了</em></p>
<p>最近在github上发现了这个叫做<a href="https://github.com/FreeCodeCamp/FreeCodeCamp" target="_blank" rel="external">FreeCodeCamp</a>的项目.玩了一下,觉得get到各种基本知识,遂mark一下,不断学习中.</p>
<p><img src="https://camo.githubusercontent.com/60c67cf9ac2db30d478d21755289c423e1f985c6/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f66726565636f646563616d702f776964652d736f6369616c2d62616e6e65722e706e67" alt=""></p>
<p>网站的网址是:</p>
<p><a href="https://www.freecodecamp.com/" target="_blank" rel="external">https://www.freecodecamp.com/</a></p>
<p>这个网站一方面为广大入门级的玩家免费提供全栈知识的学习,各种技术,各种练习.另一方面,学员的毕业项目会被免费提供给非盈利组织使用,(网站或者是App).</p>
<p>整个网站的学习路径为:<br><img src="http://7xr5em.com1.z0.glb.clouddn.com/fcc1.png" alt=""></p>
<ol>
<li>HTML5</li>
<li>CSS3</li>
<li>Javascript</li>
<li>Databases</li>
<li>Git &amp; GitHub</li>
<li>Node.js</li>
<li>React.js</li>
<li>D3.js</li>
</ol>
<p>整个的学习时间在2000小时以上(包含了前端,数据可视化和后端三个大块,以及非盈利项目)</p>
<p><img src="http://7xr5em.com1.z0.glb.clouddn.com/fcc2.png" alt=""></p>
<p>不过话说整个项目还在不断的更新中,数据可视化,尤其是D3的部分还在github上开发中,但作为一个入门,推广的技术的网站,做的已经超赞了!</p>
<blockquote>
<p>所有能被JS重写的功能,都会被JS重写掉…</p>
</blockquote>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2016/06/22/coder.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Introdcution to Wordccloud2</title>
      <link>http://lchiffon.github.io/2016/06/10/wordcloud.html</link>
      <guid>http://lchiffon.github.io/2016/06/10/wordcloud.html</guid>
      <pubDate>Fri, 10 Jun 2016 00:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;This is an introduction to &lt;code&gt;wordcloud2&lt;/code&gt;  &lt;a href=&quot;http://github.com/lchiffon/wordcloud2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;packag
      
      </description>
      
      <content:encoded><![CDATA[<p>This is an introduction to <code>wordcloud2</code>  <a href="http://github.com/lchiffon/wordcloud2" target="_blank" rel="external">package</a>. This package provides an HTML5 interface to wordcloud for data visualization. <a href="https://github.com/timdream/wordcloud2.js" target="_blank" rel="external">Timdream’s wordcloud2.js</a> is used in this package.<br><img src="http://7xr5em.com1.z0.glb.clouddn.com/wordcloud2.png" alt=""></p>
<p>This document show two main function in <code>Wordcloud2</code>:</p>
<ol>
<li><code>wordcloud2</code>: provide traditional wordcloud with HTML5</li>
<li><code>letterCloud</code>: provide wordcloud with selected word(letters).</li>
</ol>
<h3 id="install-wordcloud2"><a href="#install-wordcloud2" class="headerlink" title="install wordcloud2"></a>install wordcloud2</h3><p>You may have installed this package. Well, I still want to leave these codes here for installing.</p>
<pre><code>devtools::install_github(&quot;lchiffon/wordcloud2&quot;)
</code></pre><h3 id="wordlcoud2-function"><a href="#wordlcoud2-function" class="headerlink" title="wordlcoud2 function"></a><code>wordlcoud2</code> function</h3><p>You can use wordcloud directly:</p>
<pre><code>library(wordcloud2)
wordcloud2(data = demoFreq)
</code></pre><p><img src="http://7xr5em.com1.z0.glb.clouddn.com/ex0.png" alt=""></p>
<p><code>demoFreq</code> is a data.frame including word and freq in each column.</p>
<pre><code>head(demoFreq)


         word freq
oil       oil   85
said     said   73
prices prices   48
opec     opec   42
mln       mln   31
the       the   26
</code></pre><h3 id="Parameters"><a href="#Parameters" class="headerlink" title="Parameters"></a>Parameters</h3><ul>
<li><code>data</code><ul>
<li>A data frame including word and freq in each column</li>
</ul>
</li>
<li><code>size</code><ul>
<li>Font size, default is 1. The larger size means the bigger word.</li>
</ul>
</li>
<li><code>fontFamily</code><ul>
<li>Font to use.</li>
</ul>
</li>
<li><code>fontWeight</code><ul>
<li>Font weight to use, e.g. normal, bold or 600</li>
</ul>
</li>
<li><code>color</code><ul>
<li>color of the text, keyword ‘random-dark’ and ‘random-light’ can be used. color vector is also supported in this param</li>
</ul>
</li>
<li><code>minSize</code><ul>
<li>A character string of the subtitle</li>
</ul>
</li>
<li><code>backgroundColor</code><ul>
<li>Color of the background.</li>
</ul>
</li>
<li><code>gridSize</code><ul>
<li>Size of the grid in pixels for marking the availability of the canvas the larger the grid size, the bigger the gap between words.</li>
</ul>
</li>
<li><code>minRotation</code><ul>
<li>If the word should rotate, the minimum rotation (in rad) the text should rotate.</li>
</ul>
</li>
<li><code>maxRotation</code><ul>
<li>If the word should rotate, the maximum rotation (in rad) the text should rotate. Set the two value equal to keep all text in one angle.</li>
</ul>
</li>
<li><code>rotateRatio</code><ul>
<li>Probability for the word to rotate. Set the number to 1 to always rotate.</li>
</ul>
</li>
<li><code>shape</code><ul>
<li>The shape of the “cloud” to draw. Can be a keyword present. Available presents are ‘circle’ (default), ‘cardioid’ (apple or heart shape curve, the most known polar equation), ‘diamond’ (alias of square), ‘triangle-forward’, ‘triangle’, ‘pentagon’, and ‘star’.</li>
</ul>
</li>
<li><code>ellipticity</code><ul>
<li>degree of “flatness” of the shape wordcloud2.js should draw.</li>
</ul>
</li>
<li><code>figPath</code><ul>
<li>A fig used for the wordcloud.</li>
</ul>
</li>
<li><code>widgetsize</code><ul>
<li>size of the widgets</li>
</ul>
</li>
</ul>
<h4 id="Example1-use-color-and-backgroundcolor"><a href="#Example1-use-color-and-backgroundcolor" class="headerlink" title="Example1: use color and backgroundcolor"></a>Example1: use color and backgroundcolor</h4><pre><code>wordcloud2(demoFreq, color = &quot;random-light&quot;, backgroundColor = &quot;grey&quot;)
</code></pre><p><img src="http://7xr5em.com1.z0.glb.clouddn.com/ex1.png" alt=""></p>
<h4 id="Example2-use-rotations"><a href="#Example2-use-rotations" class="headerlink" title="Example2: use rotations"></a>Example2: use rotations</h4><pre><code>wordcloud2(demoFreq, minRotation = -pi/6, maxRotation = -pi/6, minSize = 10,
  rotateRatio = 1)
</code></pre><p><img src="http://7xr5em.com1.z0.glb.clouddn.com/ex3.png" alt=""></p>
<h4 id="Example3-use-figure-file-as-a-mask"><a href="#Example3-use-figure-file-as-a-mask" class="headerlink" title="Example3: use figure file as a mask."></a>Example3: use figure file as a mask.</h4><p>For example, <code>t.png</code> is A BIRD with black and white:<br><img src="http://7xr5em.com1.z0.glb.clouddn.com/t.png" alt=""></p>
<pre><code>figPath = system.file(&quot;examples/t.png&quot;,package = &quot;wordcloud2&quot;)
wordcloud2(demoFreq, figPath = figPath, size = 1.5,color = &quot;skyblue&quot;)
</code></pre><p><img src="http://7xr5em.com1.z0.glb.clouddn.com/tcloud.png" alt=""></p>
<h3 id="letterCloud-function"><a href="#letterCloud-function" class="headerlink" title="letterCloud function"></a><code>letterCloud</code> function</h3><p><code>letterCloud</code> provide the function to create a wordcloud with a word, like this:</p>
<pre><code>letterCloud(demoFreq, word = &quot;R&quot;, size = 2)
</code></pre><p><img src="http://7xr5em.com1.z0.glb.clouddn.com/R.png" alt=""></p>
<p>Or:</p>
<pre><code>letterCloud(demoFreq, word = &quot;WORDCLOUD2&quot;, wordSize = 1)
</code></pre><p><img src="http://7xr5em.com1.z0.glb.clouddn.com/wordcloud2.png" alt=""><br><strong>wordcloud with fig and letterCloud may disappeared in Rstudio Viewer, open into browser when you meet this bug</strong></p>
<h4 id="Parameters-1"><a href="#Parameters-1" class="headerlink" title="Parameters"></a>Parameters</h4><ul>
<li><code>data</code><ul>
<li>A data frame including word and freq in each column</li>
</ul>
</li>
<li><code>word</code><ul>
<li>A word to create shape for wordcloud.</li>
</ul>
</li>
<li><code>wordSize</code><ul>
<li>Parameter of the size of the word, default is 2.</li>
</ul>
</li>
<li><code>letterFont</code><ul>
<li>Letter font</li>
</ul>
</li>
<li><code>...</code><ul>
<li>Other parameters for wordcloud2<br>Go to <a href="http://github.com/lchiffon/wordcloud2" target="_blank" rel="external">wordcloud2</a> in the github to leave a comment or give this package a star.</li>
</ul>
</li>
</ul>
]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2016/06/10/wordcloud.html#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
