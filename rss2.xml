<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>七风阁</title>
    <link>http://lchiffon.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Thu, 20 Sep 2018 09:23:43 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>R构件后台服务器</title>
      <link>http://lchiffon.github.io/2017/12/31/weixin.html</link>
      <guid>http://lchiffon.github.io/2017/12/31/weixin.html</guid>
      <pubDate>Sun, 31 Dec 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;这是一个R为微信后台做服务的项目，这个项目并不需要其他的公众号权限，只要个人的公众号权限就可以。&lt;/p&gt;
&lt;p&gt;项目地址： &lt;a href=&quot;https://github.com/Lchiffon/Example-for-R-Weixin&quot; target=&quot;_blank&quot; 
        
      
      </description>
      
      <content:encoded><![CDATA[<p>这是一个R为微信后台做服务的项目，这个项目并不需要其他的公众号权限，只要个人的公众号权限就可以。</p><p>项目地址： <a href="https://github.com/Lchiffon/Example-for-R-Weixin" target="_blank" rel="noopener">https://github.com/Lchiffon/Example-for-R-Weixin</a></p><p>文件：</p><p>Inception/<br>api.R<br>config.ini<br>utils.R</p><ul><li>Inception/ <ul><li>这里存储了一个深度学习的模型文件</li></ul></li><li>api.R <ul><li>这里是后台的脚本</li></ul></li><li>utils.R<ul><li>这里存储了模型的执行文件</li></ul></li></ul><h2 id="接口部分"><a href="#接口部分" class="headerlink" title="接口部分"></a>接口部分</h2><p>这里是通过fiery包构建了后端的服务器，后台需要做的是把自己的服务器IP登记到微信的公众平台上， 登记之后运行这个服务，就可以开启整个服务了</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(fiery)</span><br><span class="line"></span><br><span class="line"><span class="keyword">source</span>(<span class="string">'config.ini'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">source</span>(<span class="string">"utils.R"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a New App</span></span><br><span class="line"></span><br><span class="line">app &lt;- Fire$new()</span><br><span class="line"></span><br><span class="line">app$host = IP</span><br><span class="line"></span><br><span class="line">app$port = port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app$on(<span class="string">'start'</span>, <span class="keyword">function</span>(server, <span class="keyword">...</span>) &#123;</span><br><span class="line"></span><br><span class="line">  server$set_data(<span class="string">'visits'</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">  server$set_data(<span class="string">'cycles'</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Count the number of cycles (internal loops)</span></span><br><span class="line"></span><br><span class="line">app$on(<span class="string">'cycle-start'</span>, <span class="keyword">function</span>(server, <span class="keyword">...</span>) &#123;</span><br><span class="line"></span><br><span class="line">  server$set_data(<span class="string">'cycles'</span>, server$get_data(<span class="string">'cycles'</span>) + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Count the number of requests</span></span><br><span class="line"></span><br><span class="line">app$on(<span class="string">'before-request'</span>, <span class="keyword">function</span>(server, <span class="keyword">...</span>) &#123;</span><br><span class="line"></span><br><span class="line">  server$set_data(<span class="string">'visits'</span>, server$get_data(<span class="string">'visits'</span>) + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Handle requests</span></span><br><span class="line"></span><br><span class="line">app$on(<span class="string">'request'</span>, <span class="keyword">function</span>(server, request, <span class="keyword">...</span>) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  request$parse_raw()</span><br><span class="line"></span><br><span class="line">  message(request$as_message())</span><br><span class="line"></span><br><span class="line">  print(rawToChar(request$body))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  msgXML = rawToChar(request$body)</span><br><span class="line"></span><br><span class="line">  ori = extractWeixin(msgXML, <span class="string">"ToUserName"</span>)</span><br><span class="line"></span><br><span class="line">  user = extractWeixin(msgXML, <span class="string">"FromUserName"</span>)</span><br><span class="line"></span><br><span class="line">  time = as.POSIXct(as.numeric(extractWeixin(msgXML, <span class="string">"CreateTime"</span>,<span class="literal">F</span>)),</span><br><span class="line"></span><br><span class="line">                    origin = <span class="string">"1970-01-01"</span>)</span><br><span class="line"></span><br><span class="line">  msgType = extractWeixin(msgXML, <span class="string">"MsgType"</span>)</span><br><span class="line"></span><br><span class="line">  content = extractWeixin(msgXML, <span class="string">"Content"</span>)</span><br><span class="line"></span><br><span class="line">  messageId =  extractWeixin(msgXML, <span class="string">"MsgId"</span>,<span class="literal">F</span>)</span><br><span class="line"></span><br><span class="line">  PicUrl = extractWeixin(msgXML, <span class="string">"PicUrl"</span>)</span><br><span class="line"></span><br><span class="line">  print(PicUrl)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># output = sprintf('"%s","%s","%s","%s","%s"\n',user,time,msgType,content,messageId)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  response &lt;- request$respond()</span><br><span class="line"></span><br><span class="line">  response$status &lt;- <span class="number">200L</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#response$body &lt;- paste0('&lt;h1&gt;This is indeed a test. You are number ', server$get_data('visits'), '&lt;/h1&gt;')</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  theQuery = request$query</span><br><span class="line"></span><br><span class="line">  <span class="comment"># theQ &lt;&lt;- theQuery</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(<span class="string">'echostr'</span> %<span class="keyword">in</span>% names(theQuery))&#123;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    response$body = regmatches(request$querystring,</span><br><span class="line"></span><br><span class="line">                               gregexpr(<span class="string">"(?&lt;=echostr=).+(?=&amp;t)"</span>,</span><br><span class="line"></span><br><span class="line">                                        request$querystring,</span><br><span class="line"></span><br><span class="line">                                        perl = <span class="literal">TRUE</span>))</span><br><span class="line"></span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">    print(<span class="number">123</span>)</span><br><span class="line"></span><br><span class="line">    response$body = returnMsg(ori,user, time, msgType, content, messageId, PicUrl)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># cat(response$body)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># response$body &lt;- 'success'</span></span><br><span class="line"></span><br><span class="line">  response$type &lt;- <span class="string">'html'</span></span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Show number of requests in the console</span></span><br><span class="line"></span><br><span class="line">app$on(<span class="string">'after-request'</span>, <span class="keyword">function</span>(server, <span class="keyword">...</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">#message(server$get_data('visits'))</span></span><br><span class="line"></span><br><span class="line">  flush.console()</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Be polite</span></span><br><span class="line"></span><br><span class="line">app$on(<span class="string">'end'</span>, <span class="keyword">function</span>(server) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># sink()</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#message('Goodbye')</span></span><br><span class="line"></span><br><span class="line">  flush.console()</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app$ignite(showcase = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><h2 id="函数部分"><a href="#函数部分" class="headerlink" title="函数部分"></a>函数部分</h2><p>函数部分这里主要有三个函数，它会自动被api.R调用：</p><ul><li>extractWeixin<ul><li>从微信发送的XML格式的消息中截取出需要的信息</li></ul></li><li>showPic<ul><li>一个深度学习的封包函数，返回最合适的类别</li></ul></li><li>returnMsg<ul><li>构建返回给微信的XML格式的函数</li></ul></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 微信数据截取函数</span></span><br><span class="line"></span><br><span class="line">extractWeixin = <span class="keyword">function</span>(msgXML, pattern,CDATA = <span class="literal">T</span>)&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(CDATA)</span><br><span class="line"></span><br><span class="line">    regPattern = paste0(<span class="string">"(?&lt;="</span>, pattern, <span class="string">"&gt;&lt;\\!\\[CDATA\\[)[\\s\\S]+(?=\\]\\]&gt;&lt;/"</span>,</span><br><span class="line"></span><br><span class="line">                        pattern, <span class="string">")"</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">    regPattern = paste0(<span class="string">"(?&lt;="</span>, pattern, <span class="string">"&gt;).+(?=&lt;/"</span>,</span><br><span class="line"></span><br><span class="line">                        pattern, <span class="string">")"</span>)</span><br><span class="line"></span><br><span class="line">  regmatches(msgXML,</span><br><span class="line"></span><br><span class="line">             gregexpr(regPattern,</span><br><span class="line"></span><br><span class="line">                      msgXML,</span><br><span class="line"></span><br><span class="line">                      perl = <span class="literal">TRUE</span>))[[<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">require</span>(mxnet))&#123;</span><br><span class="line"></span><br><span class="line">  install.packages(<span class="string">"drat"</span>, repos=<span class="string">"https://cran.rstudio.com"</span>)</span><br><span class="line"></span><br><span class="line">  drat:::addRepo(<span class="string">"dmlc"</span>)</span><br><span class="line"></span><br><span class="line">  install.packages(<span class="string">"mxnet"</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(mxnet)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(imager)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 载入模型</span></span><br><span class="line"></span><br><span class="line">model = mx.model.load(<span class="string">"Inception/Inception_BN"</span>, iteration=<span class="number">39</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 载入mean image</span></span><br><span class="line"></span><br><span class="line">mean.img = as.array(mx.nd.load(<span class="string">"Inception/mean_224.nd"</span>)[[<span class="string">"mean_img"</span>]])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">im &lt;- load.image(system.file(<span class="string">"extdata/parrots.png"</span>, package = <span class="string">"imager"</span>))</span><br><span class="line"></span><br><span class="line">plot(im)</span><br><span class="line"></span><br><span class="line">preproc.image &lt;- <span class="keyword">function</span>(im, mean.image) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># crop the image</span></span><br><span class="line"></span><br><span class="line">  shape &lt;- dim(im)</span><br><span class="line"></span><br><span class="line">  short.edge &lt;- min(shape[<span class="number">1</span>:<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">  xx &lt;- floor((shape[<span class="number">1</span>] - short.edge) / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">  yy &lt;- floor((shape[<span class="number">2</span>] - short.edge) / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">  cropped &lt;- crop.borders(im, xx, yy)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># resize to 224 x 224, needed by input of the model.</span></span><br><span class="line"></span><br><span class="line">  resized &lt;- resize(cropped, <span class="number">224</span>, <span class="number">224</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># convert to array (x, y, channel)</span></span><br><span class="line"></span><br><span class="line">  arr &lt;- as.array(resized) * <span class="number">255</span></span><br><span class="line"></span><br><span class="line">  dim(arr) &lt;- c(<span class="number">224</span>, <span class="number">224</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># subtract the mean</span></span><br><span class="line"></span><br><span class="line">  normed &lt;- arr - mean.img</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Reshape to format needed by mxnet (width, height, channel, num)</span></span><br><span class="line"></span><br><span class="line">  dim(normed) &lt;- c(<span class="number">224</span>, <span class="number">224</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span>(normed)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">normed &lt;- preproc.image(im, mean.img)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">prob &lt;- predict(model, X=normed)</span><br><span class="line"></span><br><span class="line">max.idx &lt;- max.col(t(prob))</span><br><span class="line"></span><br><span class="line">synsets &lt;- readLines(<span class="string">"Inception/synset.txt"</span>)</span><br><span class="line"></span><br><span class="line">print(paste0(<span class="string">"Predicted Top-class: "</span>, synsets[[max.idx]]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">showPic = <span class="keyword">function</span>(input)&#123;</span><br><span class="line"></span><br><span class="line">  cat &lt;- load.image(input)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># plot(cat)</span></span><br><span class="line"></span><br><span class="line">  normed &lt;- preproc.image(cat, mean.img)</span><br><span class="line"></span><br><span class="line">  prob &lt;- predict(model, X=normed)</span><br><span class="line"></span><br><span class="line">  max.idx &lt;- max.col(t(prob))</span><br><span class="line"></span><br><span class="line">  print(paste0(<span class="string">"Predicted Top-class: "</span>, synsets[[max.idx]]))</span><br><span class="line"></span><br><span class="line">  output = strsplit(synsets[[max.idx]],<span class="string">" "</span>)[[<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">  output[<span class="number">1</span>] = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span>(paste(output,collapse=<span class="string">" "</span>))</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">returnMsg = <span class="keyword">function</span>(ori,user, time, msgType, content, messageId,PicUrl)&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(length(PicUrl)==<span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">    cat(<span class="number">234</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>(<span class="string">'success'</span>)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  cat(<span class="number">123</span>)</span><br><span class="line">  filename = paste0(<span class="string">"data/"</span>,format(Sys.time(),<span class="string">"%Y%m%d%M"</span>))</span><br><span class="line"></span><br><span class="line">  download.file(PicUrl,destfile = filename)</span><br><span class="line">  output = sprintf(<span class="string">"&lt;xml&gt;</span></span><br><span class="line"><span class="string">    &lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</span></span><br><span class="line"><span class="string">    &lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</span></span><br><span class="line"><span class="string">    &lt;CreateTime&gt;%s&lt;/CreateTime&gt;</span></span><br><span class="line"><span class="string">    &lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;</span></span><br><span class="line"><span class="string">    &lt;Content&gt;&lt;![CDATA[介尼玛似一个%s]]&gt;&lt;/Content&gt;</span></span><br><span class="line"><span class="string">    &lt;/xml&gt;"</span>,user,ori,as.numeric(Sys.time()),showPic(filename))</span><br><span class="line">  <span class="keyword">return</span>(output)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/12/31/weixin.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>2017 书单</title>
      <link>http://lchiffon.github.io/2017/12/28/booklist.html</link>
      <guid>http://lchiffon.github.io/2017/12/28/booklist.html</guid>
      <pubDate>Thu, 28 Dec 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;一年马上过去了，理了一下今年的书单，可能上半年读的一些书都忘记叫什么名字了，明年对读书要加个要求， 每本读完的书都要写书评 ：）&lt;/p&gt;
&lt;p&gt;今年(2017年)的书单如下，部分有读书笔记的列在了后面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《龙与地下铁》&lt;/li&gt;
&lt;li&gt;《人生五大问
        
      
      </description>
      
      <content:encoded><![CDATA[<p>一年马上过去了，理了一下今年的书单，可能上半年读的一些书都忘记叫什么名字了，明年对读书要加个要求， 每本读完的书都要写书评 ：）</p><p>今年(2017年)的书单如下，部分有读书笔记的列在了后面</p><ul><li>《龙与地下铁》</li><li>《人生五大问题》</li><li>《少有人走的路》</li><li>《CUDA编程指南》</li><li>《完美的真空》</li><li>《黑客 计算机的革命英雄》</li><li>《白夜行》</li><li>《一个人的朝圣2：奎妮的情歌》</li><li>《故宫胜概（新编）》</li><li>《禅与摩托车维修艺术》</li><li>《雪鹰领主》</li><li>《星舰人类系列》</li><li><a href="http://langdawei.com/2017/09/27/amusing.html" target="_blank" rel="noopener">《娱乐至死》</a></li><li>《上帝掷骰子吗》</li><li>《最好的美食写作指南》</li><li>《随园食单》</li><li>《Learning Vue.js 2》</li><li>《刻意练习》</li><li>《苏东坡传》</li><li><a href="http://langdawei.com/2017/03/05/car.html" target="_blank" rel="noopener">《GT6 ba汽车工程》</a></li></ul><h2 id="《禅与摩托车维修艺术》"><a href="#《禅与摩托车维修艺术》" class="headerlink" title="《禅与摩托车维修艺术》"></a>《禅与摩托车维修艺术》</h2><p>这本书断断续续看了有一个月，我觉得整本书可以分成三个故事，一个故事是讲摩托车维修技术中的禅，摩托车维修技术可以推而广之到各项技术工作中，另一个故事是作者眼中的道(书中良质)，最后一个是作者一生的故事，从研究哲学到精神崩溃，但连贯前两个故事的旅程，直到最后的灵性般的康复…</p><p>第一个故事和第三个故事我就不多讲了，第三个故事是个人都能看懂，第一个故事砖搬多了自然有共鸣，第二关于哲学的故事虽然我不能完全理解，但这是我想讨论的。</p><p>第二个故事中，作者论述了他哲学中的一个概念，良质(Quality), 它出现于因果之外，出现于主客观之外，出现于二元论之外，无法被测量又被整个人类发展所需要。<br>他在自己的课堂中不教授良质的概念，又让学生写一篇短文，描述什么是良质。最后没人写的出来，但大家又都能分辨谁写得好谁写的坏。他指出，这是良质指导出的判断。<br>在欧式几何中公理的存在构建了传统几何的框架，但公理本身又和良质类似，没人说的清楚公理怎么来的，把公理做一些修改也能推断出一个完整的几何系统，比如黎曼几何。<br>二元论中是与否之外，还有无的概念，嗯，简单解释，就是NA.<br>对于作者最后一段的解读，良质或许为哲学系统的公理，在人们心中有对善恶美丑的公认化的概念之后，慢慢衍生出了整个世界的价值，但良质本身不能测量，而又不能判断对错，这样整个世界的美丑，善恶，从苏格拉底的辩证法得到的整个世界观到底是对还是错…<br>这个是我理解作者精神崩溃的一个诱因？但我觉得，从数据科学的角度不能被测度的良质可以被模拟，就像图像识别本身是在识别某种良质。<br>所以，或许，深度学习本身会像良质一样，是追溯不到理论的源头。</p><h2 id="《雪鹰领主》"><a href="#《雪鹰领主》" class="headerlink" title="《雪鹰领主》"></a>《雪鹰领主》</h2><p> 作者:我吃西红柿<br>最近在理之前关注的坑发现雪鹰完本了，于是抓来吃了这份快餐…<br>剧情来说，没啥新意的，也就是主角修炼升级换地图，再继续修炼升级换地图，前小半本在超凡生命层次的故事还不错，中间的故事质量有些下滑，后期结尾节奏加了些速，也还不算烂尾…话说番茄最近几本书地图换的少一些了，不过雪鹰里面地图换的可谓是非常之勤快了，简直和星辰变有一拼…<br>窃以为番茄写的八九本小说里面，称得上(小白)巅峰的应该是《盘龙》，当时他刚写完星辰变，节奏是最好，后面的《吞噬星空》也还不错，但是烂尾了，像夹在中间的九鼎，莽荒纪，还有雪鹰领主，我觉得有亮点，但整书的质量不如几本巅峰的小说…<br>哦，此外，吞噬星空的主角在雪鹰里面也有客串，算是个小菜单。</p><h2 id="《星舰人类系列》"><a href="#《星舰人类系列》" class="headerlink" title="《星舰人类系列》"></a>《星舰人类系列》</h2><p>罗隆翔<br>星舰人类是罗隆翔写的一系列短篇小说, 刊载于科幻世界, 从十多年前起, 每年会更新一篇左右,<br>合起来一共有十几篇, 他并没有将其出版成文, 只能从各种渠道获得他一篇篇的小说, 其中<br>根据时间进程可以分为以下几类:<br>作品(时间线/创作时间)<br>以前的黄昏(地球人类时间/2007)<br>山海间(星舰人类时间/2003)<br>逃离兄弟会(星舰人类时间/2013)<br>村庄里的高塔(地球人类时间/2011)<br>娃娃(地球人类时间/2010)<br>在他乡(星舰人类时间/2007)<br>龙喉海洋(星舰人类时间/2012)<br>陌路星辰(地球人类时间/2014)<br>早期作品<br>寄生之魔(2003) <-> 山海间<br>异天行(2004)<br>囚魂曲(2006)<br>罗隆翔星舰人类的背景是这样的:<br>人类在不断的发展中, 开始逐步走向向外星殖民的路线. 由于资源的有限, 人类也将一批批的罪犯送上宇宙飞船, 以开拓宇宙的<br>名义流放太空. 在经历了多个时代的更迭之后, 地球联盟衰败与自己塑造的AI之下, 而星舰联盟却逐渐成为宇宙的霸主…</-></p><blockquote><p>地球是人类的摇篮, 但人类不能永远生活在摇篮里.</p></blockquote><p>科幻有软硬之分, 所谓硬科幻更在意科学技术与物理定律, 而软科幻更关心故事情节, 人物的情感等. 刘慈欣是经典硬科幻的代表,<br>严谨而冷酷的定义了整个世界架构, 却不对个体的描述花费太多笔墨. 读者一方面醉心于大刘描述的黑暗森林, 一方面又略有抱怨的说<br>人物过于生硬. 对于软科幻呢, 像时间旅行者的妻子, 盗梦空间, 源代码等更偏于软科幻, 这些作品中没有核聚变, 没有引力波,<br>没有戴森球, 却有一个个引人入胜的故事.<br>虽然二者差别不大,而且很多故事二者兼而有之, 但我认为硬科幻难在写出吸引人心的故事, 软科幻难在写出信以为真的世界.<br>罗隆翔, 他用硬科幻塑造了整个世界, 又如同软科幻一般, 塑造了一个个有温度的小故事. 在这里, 你能看到气势磅礴的星舰舰队,<br>也能看到小人物出于对种族对世界的热爱而做出的牺牲. 你能看到他构思的只用一千年就发展出拥有集体智慧的硅基文明, 也能看到<br>如同黑暗森林一般的强势与毁灭. 你能看到人类与机器人为了生存而战斗, 也能看到为了双方为了构建一个共同生存的社会而做出的努力.<br>能看到英雄为了星舰人类的前途而背负骂名, 也能看到小人物为了生存与自由在荒星上生存…<br>由于是短篇故事, 所以对于各种人物的故事情节并不是尽如人意的, 而且认真讲, 文笔上和大刘差不多, 算不上(极)好, 然而, 故事还是<br>足够有趣的.</p><h2 id="《娱乐至死》"><a href="#《娱乐至死》" class="headerlink" title="《娱乐至死》"></a>《娱乐至死》</h2><p>尼尔·波兹曼（2004） 读这本书的起因是由于谢大大（统计之都的创始人/初代目/嬴政/D.罗杰）<br>在写了一个我看来很简洁(chou三声)的网站之后艾特了这本书：<br>“我是前两个月被娱乐至死洗脑了。有要杀掉一切吸引注意力的东西的倾向。”<br>比起谢大大的内容优于形式， 浅薄的我只理解形式。一个网页好看一点炫酷一点不可以么…<br>我的态度其实也就像波兹曼文章中抨击电视的态度: 形式是好看了，但是失去了最重要的内涵。<br>好，现在我们来随便聊聊书里面的一些内容。我从我最喜欢的一个角度来说，就是传播媒介的变化。<br>第一个时代： 印刷机让人类更专注于内涵。在18世纪的时候，那个时候没有电报， 没有照片， 支配人类精神世界的物品是打字机(不是打自己)，信息传播的速度不会超过人移动的速度。<br>在那个时代，人们能听得进去长达数个小时的辩论， 而辩论的讲话方式是类似书面语言的方式，充满了思考和深度。<br>第二个时代：电报与照片的时代，让信息变成了新闻。电报与照片相辅相成，并改变了信息的内涵，耸人听闻，结构零散，没有目标受众，就像今天的UC党一样。<br>而且我们生活中的大多数新闻都是不起作用的，至多是为我们提供一点谈资，却不能引导我们采取有益的行动。<br>印刷机塑造的书籍是为了保存内容， 而电报塑造的新闻是为了让你赶紧销毁它， 以方便下一个新闻进入你的视线。<br>在简短信息的基础上，摄影术的出现让电报的语境更为现实，进一步完美了新闻这个谎言。<br>第三个时代：电视的时代，让新闻变成了娱乐。电报与摄影塑造出了一种东西叫做伪语境，它塑造了一个与我们毫无关系的世界，<br>它的唯一用途可能只有娱乐，而电视的出现， 让所有的伪语境连贯了起来，并塑造了一个又一个的空中楼阁，打开电视，每个节目都是<br>精心准备的，有美丽的画面，悠扬的音乐，好看的小姐姐，让人感到身心愉悦。而少有的战争，<br>犯罪的新闻也会被小姐姐主持人用“好，现在…”的类似说辞告诉听众那跟你没有关系：“快来看下一则新闻吧。”<br>新闻变成了一年365天，每天24小时不间断的娱乐， 而这并进一步剥夺了人类思考的时间。电视新闻节目提供给观众的是娱乐而不是信息，<br>这种情况的严重性不仅仅在于我们被剥夺了真实的信息，而且在于我们正在逐渐失去判断什么是信息的能力。<br>无知是可以补救的，但如果我们把无知当成是知识，我们该怎么做呢？<br>看完本书，一般会有两种结论：一个是娱乐至死， 一个是娱乐致死<br>我们不必因为这些观点一味地攻击大众的文化选择，来讲电视是不好的，微信公众号是不好的， 百度新闻是不好的，<br>我更愿意将它看作一个娱乐而不是获取知识的渠道。<br>娱乐未必致死，但我其实更害怕一个娱乐至死的世界，害怕的是我们没有选择不娱乐的机会。</p><h2 id="《上帝掷骰子吗》"><a href="#《上帝掷骰子吗》" class="headerlink" title="《上帝掷骰子吗》"></a>《上帝掷骰子吗》</h2><p>曹天元 这是一本介绍量子物理的科普书，同时也是一本介绍物理的历史书。从牛顿与胡克的争论到经典物理体系的建立，再到量子物理逐渐颠覆经典物理，爱因斯坦薛定谔大战哥本哈根学派，对由自己的理论一手搭建的量子物理提出质疑…作者用生动的笔触描绘出了整个量子物理的思想，历史，以及未来，(虽然书的后一部分讲到近代的研究略有枯燥)<br>总结下我对本书的几个感想:<br>粒子的本质是光还是波不重要，因为本质这个词没有意义<br>…<br>因为宇宙诞生了人类，人类才有可能考虑宇宙的意义</p><p>观测不到的东西未必不存在，比如上帝比如鬼魂，还有三体中弗里德里克的量子军团…</p><h2 id="《最好的美食写作指南》"><a href="#《最好的美食写作指南》" class="headerlink" title="《最好的美食写作指南》"></a>《最好的美食写作指南》</h2><p>Debra<br>少东家链过的一本豆瓣读书的小册子，小册子挺短的，主要是讲作者作为一个自由职业者对于美食写作的一些经验与思考。以下是作者的行文风格:<br>「一桌挨着一桌全是免费美食。轻油烤馕里是鹰嘴豆和土豆的馅——而且灌满了西红柿；小杯甜拉西；更多鹰嘴豆混在当季酸角及青椒里，用来搭配番红花米饭。辣咖喱蔬菜上洒了少许口感清爽的黄酸奶调料。菠菜奶豆腐和可口的印度薄饼是绝配。以糖、黄油、面粉和水制成的卡拉荷·玻拉萨德只有骨牌大小，口感朴素美妙。」<br>作者主张描述美食背后所包含的情感与内涵，而不是使用华丽的辞藻和陈词滥调。感觉现在的大家对美食的描述能力在逐渐退化，对美食的描述好像都是”好吃”一词加九张照片。<br>写情感要用心，写内涵需要专业性，如果吃一口美食，尝不出来原料和配料，美食作品该怎么下下去……<br>「像“美味”这样的词已没什么吸引力了，要写出新意，丢掉陈词滥调，另外注意别夸夸其谈。食物饱含感情和私人体验，令人获得心灵上的满足，所以你的写作必须直观清晰，以和读者形成情感上的共鸣。<br>最后拉来一句话给会做饭的亲们共勉:<br>当食物从厨房端出时，我希望能从中尝出厨师的骄傲。</p><h2 id="《随园食单》"><a href="#《随园食单》" class="headerlink" title="《随园食单》"></a>《随园食单》</h2><p>袁枚<br>整本书是袁枚写的一本”雅厨”菜谱，是他收集的各种食材的处理方式，以及做饭要注意的事项，可以看到一些当时的饮食风格，也能读到一些他很作的一面，比如不吃流行的镇江香醋，要吃板浦滴醋，做鸡蛋羹要求用筷子打一千下，据说这样做出来的鸡蛋羹会变嫩…<br>除此之外，一些调味料与食材处理还是<br>很好玩的，值得一读。<br>在我看来，袁枚对美食核心的理解是”原味”，如果有不同食材的味道混在一起，他就会大骂，”俗厨啊俗厨，浇了热油好好的东西全糟蹋了！”，若是他知道现在有个调味料叫味精，以及一群一辣遮百丑与一咸遮百丑的俗厨，估计又要从棺材里跳出来大骂了吧。</p><p>以下是几个至今为止还是适用的段子:</p><p>富贵之人，嗜素甚于嗜荤。<br>见水不见米，非粥也，见米不见水，非粥也。必使水米融洽，柔腻如一，而后谓之粥。<br>而我见士大夫生长杭州，一入宦场便吃熬茶，其苦如药，其色如血。</p><p>以上</p><h2 id="《Learning-Vue-js-2》"><a href="#《Learning-Vue-js-2》" class="headerlink" title="《Learning Vue.js 2》"></a>《Learning Vue.js 2》</h2><p>最近在搞一些前端的东西, 所以就读了下这本技术的书籍, 技术的深度还可以, 适合读完官网教程并且拒绝继续使用vue1的用户进行更深的阅读,里面着重讲述了模板, 单文件系统, vuex等内容.<br>里面无聊的技术就不再分享, 分享下读这个书的一些小细节, 觉得还是挺有意思的.</p><p>我一直觉得前端的世界很有意思, 很有创造力, 大家根本不介意重复造轮子, 而是介意这个工具是不是自己喜欢的.<br>作者在第一章就写下了这样一段话, 鼓励大家去尝试创造有意思的东西:<br>‘When you realize that something cool does not exist and you are able to create it—just do it!’<br>(当你意识到有些很Cool的东西还没有人做, 而你恰好能创造它, 那你还在等什么呢? Just do it!)</p><p>在另一部分里面, 作者详细的说明了如何去修改vue.js的源码并且做出自己的贡献:<br>‘I’m sure you have plenty of ideas<br>about how to improve or add some functionality to Vue.js. So change it, rebuild, test, deploy!<br>Happy pull requests!’<br>(我确信你对Vue.js有很多想法, 那么就开心的修改, 测试, 提交, 为开源社区做出自己的贡献吧~)</p><p>作者为了说明vue的轻量级, 黑起Angular.js(另一个主流的前端框架)也不遗余力, 你想写个’Hello World’么, 先准备上18个依赖包, 以及数千个字吧，噗哈哈:<br>“Even without TypeScript, Angular’s Quickstart guide starts out with an app that uses<br>ES2015 JavaScript, NPM with 18 dependencies, 4 files, and over 3,000 words to explain it<br>all - just to say Hello World.”</p><h2 id="《刻意练习》"><a href="#《刻意练习》" class="headerlink" title="《刻意练习》"></a>《刻意练习》</h2><p>一本挺有意思的书，里面内容我能听进去一大半。<br>核心思想是通过一定程度的刻意练习可以让一个人从新手成长为大师:刻意练习的必要性，推动自己去危险区，保持专注反馈修正，然后通过一万小时的训练，完成成为大师的必要条件。作者很贴心的提醒，那是一个必要条件，不是充分条件。(有点像说我许愿没成功是因为心不诚)稍微有点听不进去的就是这个一万小时的理论，若是自己该做的几万小时的练习我也愿意，如果只是爱好，我觉得有一百个一百小时的练习会让生活更有趣一些。<br>即使吐这么多槽也必须说作者对刻意练习的方式，过程与结果还是思考的比较透彻的，还是很有助于自己学习效率的提升。</p><h2 id="《苏东坡传》"><a href="#《苏东坡传》" class="headerlink" title="《苏东坡传》"></a>《苏东坡传》</h2><p>林语堂擅长用简单直接的文风来诉说心中的那点小情怀，这与苏轼极为贴近，苏轼自己说”吾上可陪玉皇大帝，下可陪卑田院乞儿”，一方面是个浪漫主义诗人，一方面又是一个悲天悯人，为黎民百姓的疾苦奔走相告的政治家，这两种身份在一个人的身上创造了一个又一个的故事。<br>给我印象最深的是两个事情，一个是在王安石死后，追封太傅时写的圣旨，他对王的描述写到”网罗六艺之遗文，断以己意，糠粃百家之陈述，作新欺人”，作为”一生的宿敌”，有此评价，我想已经包含了足够复杂的情感，也是赞扬，也是讽刺。第二个是在苏轼贬谪期间写的酒颂。”酒勿嫌浊，人当取醇。失忧心于昨梦，信妙理之疑神……”那时苏轼已近六旬，剥去官职俸禄，一贬再贬，但这个过程中他依旧在一边创作一边享受生活，酿酒，写一篇酒颂给不懂酒中之乐的人，自己造房子，刚造好没多久又被贬到海南，又自己做墨差点把房子点着…<br>苏轼的段子太多，不再赘述，反正看完了这本书，在上海呆了四年的我终于有了去西湖看看的打算</p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/12/28/booklist.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>书评：娱乐至死</title>
      <link>http://lchiffon.github.io/2017/09/27/amusing.html</link>
      <guid>http://lchiffon.github.io/2017/09/27/amusing.html</guid>
      <pubDate>Wed, 27 Sep 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;娱乐至死-尼尔·波兹曼（2004）&quot;&gt;&lt;a href=&quot;#娱乐至死-尼尔·波兹曼（2004）&quot; class=&quot;headerlink&quot; title=&quot;娱乐至死 尼尔·波兹曼（2004）&quot;&gt;&lt;/a&gt;娱乐至死 尼尔·波兹曼（2004）&lt;/h2&gt;&lt;p&gt;读这本书的起因是由于
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="娱乐至死-尼尔·波兹曼（2004）"><a href="#娱乐至死-尼尔·波兹曼（2004）" class="headerlink" title="娱乐至死 尼尔·波兹曼（2004）"></a>娱乐至死 尼尔·波兹曼（2004）</h2><p>读这本书的起因是由于谢大大（统计之都的创始人/初代目/嬴政/D.罗杰）在写了一个我看来很简洁(chou三声)的网站之后艾特了这本书：</p><p>“我是前两个月被娱乐至死洗脑了。有要杀掉一切吸引注意力的东西的倾向。”</p><p>比起谢大大的内容优于形式， 浅薄的我只理解形式。一个网页好看一点炫酷一点不可以么…</p><p>我的态度其实也就像波兹曼文章中抨击电视的态度: 形式是好看了，但是失去了最重要的内涵。</p><p>好，现在我们来随便聊聊书里面的一些内容。我从我最喜欢的一个角度来说，就是传播媒介的变化。</p><p>第一个时代： 印刷机让人类更专注于内涵。在18世纪的时候，那个时候没有电报， 没有照片， 支配人类精神世界的物品是打字机(不是打自己)，信息传播的速度不会超过人移动的速度。在那个时代，人们能听得进去长达数个小时的辩论， 而辩论的讲话方式是类似书面语言的方式，充满了思考和深度。</p><p>第二个时代：电报与照片的时代，让信息变成了新闻。电报与照片相辅相成，并改变了信息的内涵，耸人听闻，结构零散，没有目标受众，就像今天的UC党一样。而且我们生活中的大多数新闻都是不起作用的，至多是为我们提供一点谈资，却不能引导我们采取有益的行动。印刷机塑造的书籍是为了保存内容， 而电报塑造的新闻是为了让你赶紧销毁它， 以方便下一个新闻进入你的视线。在简短信息的基础上，摄影术的出现让电报的语境更为现实，进一步完美了新闻这个谎言。</p><p>第三个时代：电视的时代，让新闻变成了娱乐。电报与摄影塑造出了一种东西叫做伪语境，它塑造了一个与我们毫无关系的世界，它的唯一用途可能只有娱乐，而电视的出现， 让所有的伪语境连贯了起来，并塑造了一个又一个的空中楼阁，打开电视，每个节目都是精心准备的，有美丽的画面，悠扬的音乐，好看的小姐姐，让人感到身心愉悦。而少有的战争，犯罪的新闻也会被小姐姐主持人用“好，现在…”的类似说辞告诉听众那跟你没有关系：“快来看下一则新闻吧。”新闻变成了一年365天，每天24小时不间断的娱乐， 而这并进一步剥夺了人类思考的时间。电视新闻节目提供给观众的是娱乐而不是信息，这种情况的严重性不仅仅在于我们被剥夺了真实的信息，而且在于我们正在逐渐失去判断什么是信息的能力。无知是可以补救的，但如果我们把无知当成是知识，我们该怎么做呢？</p><p>看完本书，一般会有两种结论：一个是娱乐至死， 一个是娱乐致死</p><p>我们不必因为这些观点一味地攻击大众的文化选择，来讲电视是不好的，微信公众号是不好的， 百度新闻是不好的，我更愿意将它看作一个娱乐而不是获取知识的渠道。</p><p>娱乐未必致死，但我其实更害怕一个娱乐至死的世界，害怕的是我们没有选择不娱乐的机会。</p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/09/27/amusing.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>如何不污染作用域</title>
      <link>http://lchiffon.github.io/2017/08/09/jsfunction.html</link>
      <guid>http://lchiffon.github.io/2017/08/09/jsfunction.html</guid>
      <pubDate>Wed, 09 Aug 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;JS代码里面有个有趣的函数写法, 是把一个函数&lt;strong&gt;定义好之后立即执行&lt;/strong&gt;, 这样函数内部的内容不会污染整个作用域(大概可以用这个词吧)&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g
        
      
      </description>
      
      <content:encoded><![CDATA[<p>JS代码里面有个有趣的函数写法, 是把一个函数<strong>定义好之后立即执行</strong>, 这样函数内部的内容不会污染整个作用域(大概可以用这个词吧)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> XXX</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>虽然这样的代码在R里面也是可以用滴, 但是相比于JS这种写法的流行程度, 在R里面基本没怎么见人用过,<br>非要强说的话apply类函数里面也是有这样的匿名函数, 但是不太常见这种定义立即执行的过程.</p><p>然而仔细想想还是有几个使用的场景的</p><h2 id="读取数据并执行操作"><a href="#读取数据并执行操作" class="headerlink" title="读取数据并执行操作"></a>读取数据并执行操作</h2><p>一个经典的例子是读取数据, 做一些操作, 做好之后把结果存在另一个文件里面, 如何保证变量空间中绝对干净?<br>可以使用这样的定义执行过程:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>()&#123;</span><br><span class="line"> dat = read.csv(<span class="string">"data/dat.csv"</span>)</span><br><span class="line"> model = lm(y~.,dat)</span><br><span class="line"> res = predict(model,newx=dat)</span><br><span class="line"> dat$res = res</span><br><span class="line"> write.csv(dat, <span class="string">"data/datResult.csv"</span>)</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>当然, 这只是省掉了<code>rm(dat,model,res)</code>这样一句代码</p><h2 id="do的过程"><a href="#do的过程" class="headerlink" title="do的过程"></a>do的过程</h2><p>这个东西感觉又是个冷门的很的知识, 这个<code>do</code>来源于<code>dplyr::do</code>的函数(plyr中也有, 但不做讨论), 这个<code>do</code>的功能是对一个<code>group_by</code><br>之后的数据框做汇总整理, 再返回一个数据框</p><p>比如帮助文档里面有这样的一个例子:</p><p>对数据的<code>cyl</code>进行group by, 对每个小组训练一个线性模型, 再取出它的参数, <strong>需要分两步<code>do</code>执行</strong><br><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">by_cyl &lt;- group_by(mtcars, cyl)</span><br><span class="line">do(by_cyl, head(., <span class="number">2</span>))</span><br><span class="line"><span class="comment"># 根据groupby 训练N个模型</span></span><br><span class="line">models &lt;- by_cyl %&gt;% do(mod = lm(mpg ~ disp, data = .))</span><br><span class="line">models</span><br></pre></td></tr></table></figure></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Source: local data frame [<span class="number">3</span> x <span class="number">2</span>]</span><br><span class="line">Groups: &lt;by row&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A tibble: 3 × 2</span></span><br><span class="line">    cyl      mod</span><br><span class="line">* &lt;dbl&gt;   &lt;list&gt;</span><br><span class="line"><span class="number">1</span>     <span class="number">4</span> &lt;S3: lm&gt;</span><br><span class="line"><span class="number">2</span>     <span class="number">6</span> &lt;S3: lm&gt;</span><br><span class="line"><span class="number">3</span>     <span class="number">8</span> &lt;S3: lm&gt;</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提取参数</span></span><br><span class="line">models %&gt;% do(data.frame(coef = coef(.$mod)))</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Source: local data frame [<span class="number">6</span> x <span class="number">1</span>]</span><br><span class="line">Groups: &lt;by row&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A tibble: 6 × 1</span></span><br><span class="line">          coef</span><br><span class="line">*        &lt;dbl&gt;</span><br><span class="line"><span class="number">1</span> <span class="number">40.871955322</span></span><br><span class="line"><span class="number">2</span> -<span class="number">0.135141815</span></span><br><span class="line"><span class="number">3</span> <span class="number">19.081987419</span></span><br><span class="line"><span class="number">4</span>  <span class="number">0.003605119</span></span><br><span class="line"><span class="number">5</span> <span class="number">22.032798914</span></span><br><span class="line"><span class="number">6</span> -<span class="number">0.019634095</span></span><br></pre></td></tr></table></figure><p>但如果用定义函数立即执行的操作, 是可以在函数内部为所欲为的写代码了:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">models2 &lt;- by_cyl %&gt;% do((<span class="keyword">function</span>()&#123;</span><br><span class="line">mod = lm(mpg ~ disp, data = .)</span><br><span class="line">data.frame(coef = coef(mod))</span><br><span class="line">&#125;)())</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Source: local data frame [<span class="number">6</span> x <span class="number">2</span>]</span><br><span class="line">Groups: cyl [<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">    cyl         coef</span><br><span class="line">  &lt;dbl&gt;        &lt;dbl&gt;</span><br><span class="line"><span class="number">1</span>     <span class="number">4</span> <span class="number">40.871955322</span></span><br><span class="line"><span class="number">2</span>     <span class="number">4</span> -<span class="number">0.135141815</span></span><br><span class="line"><span class="number">3</span>     <span class="number">6</span> <span class="number">19.081987419</span></span><br><span class="line"><span class="number">4</span>     <span class="number">6</span>  <span class="number">0.003605119</span></span><br><span class="line"><span class="number">5</span>     <span class="number">8</span> <span class="number">22.032798914</span></span><br><span class="line"><span class="number">6</span>     <span class="number">8</span> -<span class="number">0.019634095</span></span><br></pre></td></tr></table></figure><p>恩恩, 大概就是这样, GL, HF~</p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/08/09/jsfunction.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>可以滚的词云, 就问你怕不怕</title>
      <link>http://lchiffon.github.io/2017/06/20/candy.html</link>
      <guid>http://lchiffon.github.io/2017/06/20/candy.html</guid>
      <pubDate>Tue, 20 Jun 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;昨天看到了一个很有意思的Issue, 问&lt;a href=&quot;https://github.com/Lchiffon/wordcloud2/issues/21&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;可不可以做一个3D球形的词云:)&lt;/a&gt;&lt;/p&gt;
&lt;p
        
      
      </description>
      
      <content:encoded><![CDATA[<p>昨天看到了一个很有意思的Issue, 问<a href="https://github.com/Lchiffon/wordcloud2/issues/21" target="_blank" rel="noopener">可不可以做一个3D球形的词云:)</a></p><p>想想是可以实现的, 过程中用了一些黑魔法:</p><ol><li>用webshot将词云截图成一个图片</li><li>用threejs将图片映射在一个球上(类似3D地图的实现)</li><li>之后就可以玩这个球了噗哈哈</li></ol><p><img src="https://user-images.githubusercontent.com/7221728/27312445-ec960882-559a-11e7-860a-2c87de242ce4.png" alt=""></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(threejs)</span><br><span class="line"><span class="keyword">library</span>(wordcloud2)</span><br><span class="line"><span class="keyword">library</span>(htmlwidgets)</span><br><span class="line"><span class="keyword">library</span>(webshot)</span><br><span class="line">hw = wordcloud2(demoFreqC,size = <span class="number">4</span>)</span><br><span class="line">saveWidget(hw,<span class="string">"1.html"</span>,selfcontained = <span class="literal">F</span>)</span><br><span class="line">webshot(<span class="string">"1.html"</span>,<span class="string">"1.jpeg"</span>,vwidth = <span class="number">4000</span>, vheight = <span class="number">2000</span>, delay =<span class="number">20</span>)</span><br><span class="line">earth &lt;- <span class="string">"1.jpeg"</span></span><br><span class="line">globejs(img=earth, bg=<span class="string">"white"</span>)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/06/20/candy.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>多说再见</title>
      <link>http://lchiffon.github.io/2017/04/25/duoshuo.html</link>
      <guid>http://lchiffon.github.io/2017/04/25/duoshuo.html</guid>
      <pubDate>Tue, 25 Apr 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;多说是一个国内为各种网站和博客提供评论窗的网站, 今年三月, 慢慢听到这样的一个消息:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;重要通知: 多说即将关闭&lt;br&gt;多说网 发表于 3月21日&lt;br&gt;因公司业务调整，非常遗憾的向大家宣布多说项目即将关闭。 我们将于2017年6月1
        
      
      </description>
      
      <content:encoded><![CDATA[<p>多说是一个国内为各种网站和博客提供评论窗的网站, 今年三月, 慢慢听到这样的一个消息:</p><blockquote><p>重要通知: 多说即将关闭<br>多说网 发表于 3月21日<br>因公司业务调整，非常遗憾的向大家宣布多说项目即将关闭。 我们将于2017年6月1日正式关停服务，在此之前您可以通过后台的数据导出功能导出自己站点的评论数据。 对此给您造成的不便，我们深表歉意，感谢您的一路相伴。</p></blockquote><p>也就是说从14年用到现在的多说就要这样没了, 忧伤, 也算是一个被微信公众号逼死的公司吧,<br>不过真心感谢多说团队的坚持和付出, 话说多说如果愿意提供付费服务我也愿意啊…</p><p>一边忧伤一边寻找替代的东西, <del>没打赏就算了</del>总不能没评论吧…</p><h1 id="Disqus"><a href="#Disqus" class="headerlink" title="Disqus"></a>Disqus</h1><p>Disqus是老牌评论插件, 完全没有像多说的垃圾评论和关闭问题, 唯一不爽的一点就是Disqus是一个被墙的插件, 如果改用Disqus, hexo分分钟搞定, 但是墙掉的总是会有点不舒服, 再找找</p><h1 id="搜狐肠炎"><a href="#搜狐肠炎" class="headerlink" title="搜狐肠炎"></a>搜狐肠炎</h1><p>哦不, 是搜狐畅言, 基本类似的功能, 以搜狐的风格, 果然有不少杂七杂八的东西, 忍痛注册, 需要备案号… :88:</p><h1 id="友言"><a href="#友言" class="headerlink" title="友言"></a>友言</h1><p>友言也是一个第三方的插件, 是做JiaThis的公司做的, 但是看谁在用的时候发现都是各种小网站, 而且没人用, 放弃…</p><h1 id="gitment"><a href="#gitment" class="headerlink" title="gitment"></a>gitment</h1><p>gitment是一个用github issue来代替评论的插件: 使用一个github的issue来代替评论, 评论需要登陆github账号, 没有github不能评论, 项目地址 <a href="https://github.com/imsun/gitment#get-started" target="_blank" rel="noopener">https://github.com/imsun/gitment#get-started</a></p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/04/25/duoshuo.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>如何合理的提问</title>
      <link>http://lchiffon.github.io/2017/04/25/questions.html</link>
      <guid>http://lchiffon.github.io/2017/04/25/questions.html</guid>
      <pubDate>Tue, 25 Apr 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;经常会遇到有人问问题, 却又问不到点子上, 而且很多东西是可以直接百度或者谷歌, 或者在&lt;br&gt;问答网站&lt;a href=&quot;http://strackoverflow.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;strackoverflow&lt;/a&gt;
        
      
      </description>
      
      <content:encoded><![CDATA[<p>经常会遇到有人问问题, 却又问不到点子上, 而且很多东西是可以直接百度或者谷歌, 或者在<br>问答网站<a href="http://strackoverflow.com" target="_blank" rel="noopener">strackoverflow</a> 查到的. 目前我所看到的最好的<br>提问引导是在mxnet的<a href="https://github.com/dmlc/mxnet/issues/new" target="_blank" rel="noopener">new issue</a>界面上看到的.</p><p>简单总结下需要以下几个部分:</p><ol><li>环境信息</li><li>全部错误信息</li><li>最小<strong>可执行</strong>代码</li><li>哪一步的代码导致了错误</li><li>尝试过用什么方式来解决</li></ol><p>以下是正文信息:</p><p>For bugs or installation issues, please provide the following information.<br>The more information you provide, the more likely people will be able to help you.</p><h2 id="Environment-info"><a href="#Environment-info" class="headerlink" title="Environment info"></a>Environment info</h2><p>Operating System:</p><p>Compiler:</p><p>Package used (Python/R/Scala/Julia):</p><p>MXNet version:</p><p>Or if installed from source:</p><p>MXNet commit hash (<code>git rev-parse HEAD</code>):</p><p>If you are using python package, please provide</p><p>Python version and distribution:</p><p>If you are using R package, please provide</p><p>R <code>sessionInfo()</code>:</p><h2 id="Error-Message"><a href="#Error-Message" class="headerlink" title="Error Message:"></a>Error Message:</h2><p>Please paste the full error message, including stack trace.</p><h2 id="Minimum-reproducible-example"><a href="#Minimum-reproducible-example" class="headerlink" title="Minimum reproducible example"></a>Minimum reproducible example</h2><p>if you are using your own code, please provide a short script that reproduces the error.</p><h2 id="Steps-to-reproduce"><a href="#Steps-to-reproduce" class="headerlink" title="Steps to reproduce"></a>Steps to reproduce</h2><p>or if you are running standard examples, please provide the commands you have run that lead to the error.</p><p>1.<br>2.<br>3.</p><h2 id="What-have-you-tried-to-solve-it"><a href="#What-have-you-tried-to-solve-it" class="headerlink" title="What have you tried to solve it?"></a>What have you tried to solve it?</h2><p>1.<br>2.<br>3.</p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/04/25/questions.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Vue2的一些阅读</title>
      <link>http://lchiffon.github.io/2017/04/19/vue2.html</link>
      <guid>http://lchiffon.github.io/2017/04/19/vue2.html</guid>
      <pubDate>Wed, 19 Apr 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;learn vue.js 2 最近在搞一些前端的东西, 所以就读了下这本技术的书籍, 技术的深度还可以, 适合读完官网教程并且拒绝继续使用vue1的用户进行更深的阅读,里面着重讲述了模板, 单文件系统, vuex等内容.&lt;br&gt;里面无聊的技术就不再分享, 分享下读这个书的一
        
      
      </description>
      
      <content:encoded><![CDATA[<p>learn vue.js 2 最近在搞一些前端的东西, 所以就读了下这本技术的书籍, 技术的深度还可以, 适合读完官网教程并且拒绝继续使用vue1的用户进行更深的阅读,里面着重讲述了模板, 单文件系统, vuex等内容.<br>里面无聊的技术就不再分享, 分享下读这个书的一些小细节.</p><p>我一直觉得前端的世界很有意思, 很有创造力, 大家根本不介意重复造轮子, 而是介意这个工具是不是自己喜欢的.<br>作者在第一章就写下了这样一段话, 鼓励大家去尝试创造有意思的东西:<br>‘When you realize that something cool does not exist and you are able to create it—just do it!’<br>(当你意识到有些很Cool的东西还没有人做, 而你恰好能创造它, 那你还在等什么呢? Just do it!)</p><p>在另一部分里面, 作者详细的说明了如何去修改vue.js的源码并且做出自己的贡献:<br>‘I’m sure you have plenty of ideas<br>about how to improve or add some functionality to Vue.js. So change it, rebuild, test, deploy!<br>Happy pull requests!’<br>(我确信你对Vue.js有很多想法, 那么就开心的修改, 测试, 提交, 为开源社区做出自己的贡献吧~)</p><p>作者为了说明vue的轻量级, 黑起Angular.js(另一个主流的前端框架)也不遗余力, 你想写个’Hello World’么, 先准备上18个依赖包, 以及数千个字吧，噗哈哈:<br>“Even without TypeScript, Angular’s Quickstart guide starts out with an app that uses<br>ES2015 JavaScript, NPM with 18 dependencies, 4 files, and over 3,000 words to explain it<br>all - just to say Hello World.”</p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/04/19/vue2.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>cosx</title>
      <link>http://lchiffon.github.io/2017/04/19/cosx.html</link>
      <guid>http://lchiffon.github.io/2017/04/19/cosx.html</guid>
      <pubDate>Wed, 19 Apr 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;最近一个月除了自己超花心思的事情之外, 跟着益辉大大后面做一些打杂的事情: &amp;lt;cos.name&amp;gt;要将原来在wordpress的网站重写成一套依赖blogdown的网站,  细节可以参考&lt;a href=&quot;https://yihui.name/cn/2017/03/
        
      
      </description>
      
      <content:encoded><![CDATA[<p>最近一个月除了自己超花心思的事情之外, 跟着益辉大大后面做一些打杂的事情: &lt;cos.name&gt;要将原来在wordpress的网站重写成一套依赖blogdown的网站,  细节可以参考<a href="https://yihui.name/cn/2017/03/drink-more/" target="_blank" rel="noopener">能复饮乎</a>及<a href="http://statsjoke.me/rocket/" target="_blank" rel="noopener">送火箭升天</a>.</p><p>有些收获, 略记一二:</p><h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><p>之前一直对于git就停留在几个基本命令, pull, add, commit, push, reset, clone.<br>这次在益辉大大以及西红柿的监督下, 慢慢懂了各种分支的使用, merge, pr等工具, 改到<br>后来, 又发掘出来了Atom里面的git-plus, 各种黑魔法, 熟了分支切换之后直接进行一键提交,<br>把add+commit+push一锅端, 可惜Yalei来我家在秀操作的时候Atom出了问题, 黑历史!</p><h1 id="Chrome-Extention"><a href="#Chrome-Extention" class="headerlink" title="Chrome Extention"></a>Chrome Extention</h1><p>在文章review的过程中, 益辉大大写了一小段JS的代码, 用来快速打开PR里面的开发版的文章页面.<br>在谢大大的感召下, 写了个<a href="https://github.com/Lchiffon/cosxReviewTool" target="_blank" rel="noopener">谷歌拓展工具</a>.<br>中间翻了很多博客和文档, 谷歌扩展真心复杂, 最难的在找到适合使用的那个函数, 最后搞出了一个代码<br>注入的方式解决掉了</p><h1 id="Vue实现的搜索"><a href="#Vue实现的搜索" class="headerlink" title="Vue实现的搜索"></a>Vue实现的搜索</h1><p>因为是静态页面, 所以搜索是个小问题, 这段时间为了公司一个项目在没日没夜的看vue, 谢大大在一个issue里面提了使用js+githubAPI来写这个静态搜索之后, 就着手写了这个<a href="https://github.com/Lchiffon/vue-github-api" target="_blank" rel="noopener">小页面</a>, 目前还在考虑怎么<br>把这个东西合并到主站里面, 等谢大大起来再说吧.</p><h1 id="最大的收获"><a href="#最大的收获" class="headerlink" title="最大的收获"></a>最大的收获</h1><p>其实, 最大的收获是在改统计之都早期文章的收获, 改文章的过程中将08年开始的文章一篇篇读了下来,<br>虽然还没有全部读完, 大概到10年左右吧. 但是从字里行间透露出来的力量让我觉得还是很振奋人心的.<br>当时基本是一个没有太多大神的时代, 做一切事情都是靠年轻(lao)一辈的爱好和一腔热血, 看完还是有一些感动的. 这也是到后来越来月越愿意在这个项目上跟着谢大大忙前忙后的原因.</p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/04/19/cosx.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>一个忧伤的bug</title>
      <link>http://lchiffon.github.io/2017/03/14/bugs.html</link>
      <guid>http://lchiffon.github.io/2017/03/14/bugs.html</guid>
      <pubDate>Tue, 14 Mar 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;最近在开发一个神秘的package, 如果能做出来, 估计会很好玩, 涉及到几个神奇的库的整合:)&lt;/p&gt;
&lt;p&gt;然而, 在开发过程中, 出现了一个神奇的bug, 看到问题后我哭笑不得, 然后认真地把它记录下来:&lt;/p&gt;
&lt;p&gt;&lt;del&gt;前两天去静安寺上香,祈祷了三件事, 
        
      
      </description>
      
      <content:encoded><![CDATA[<p>最近在开发一个神秘的package, 如果能做出来, 估计会很好玩, 涉及到几个神奇的库的整合:)</p><p>然而, 在开发过程中, 出现了一个神奇的bug, 看到问题后我哭笑不得, 然后认真地把它记录下来:</p><p><del>前两天去静安寺上香,祈祷了三件事, 代码无bug, 航班不晚点, 机油速脱单. 看来只能指望后两件事情实现了</del></p><p>其实问题就是我写的两个包, <code>leafletCN</code>与<code>REmap</code>里面竟然有一个函数名是重复了:(. 所以二者不能同时使用, kkk.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">leafletCN::mapNamesDemo dataset and other function</span><br><span class="line">maps::internalInternally Required Functions</span><br><span class="line">REmap::mapNamesGet the names of a choropleth map for remapC</span><br></pre></td></tr></table></figure><p>从此不得不感慨自己的智商是不是有下限, 速度改掉leafletCN里面的函数名, 不过CRAN上面是没办法了..</p><p>请让我等几个月更新到CRAN, 否则Uwe又要找我事情了..</p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/03/14/bugs.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>GT6 ba汽车工程</title>
      <link>http://lchiffon.github.io/2017/03/05/car.html</link>
      <guid>http://lchiffon.github.io/2017/03/05/car.html</guid>
      <pubDate>Sun, 05 Mar 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;在鸟兄的推荐下看了这本书， GT6 ba汽车工程。&lt;/p&gt;
&lt;p&gt;这本书是GT6游戏光盘附赠手册，然而，在整本书中你根本无法看到任何关于GT6的内容。取而代之的是各种关于汽车工程与赛车调教的内容。&lt;/p&gt;
&lt;p&gt;这本手册，能让读者明白一些基本的常识与名词，里面关于各种物理学
        
      
      </description>
      
      <content:encoded><![CDATA[<p>在鸟兄的推荐下看了这本书， GT6 ba汽车工程。</p><p>这本书是GT6游戏光盘附赠手册，然而，在整本书中你根本无法看到任何关于GT6的内容。取而代之的是各种关于汽车工程与赛车调教的内容。</p><p>这本手册，能让读者明白一些基本的常识与名词，里面关于各种物理学的描述也让自己穿越回了那个什么都不懂的学生时代，比如扭力的概念，空气动力学的伯努利定律，阻尼力与阻尼系数…</p><p>但是在这之外，读完全书，反而激起了自己的很多兴趣与思考，比如尝试解释为什么大部分乘用车都是发动机在前面而驱动轮在后面（简单说是因为容易调教车身平衡，不易出现转向不足与过度）。</p><p>还有就是以前总感觉一辆A级车比C级车更好开，油门更灵敏，怠速够快。长者给的解释是调教不同，细看了这本手册之后，发现从调教与车的区别有好多方式可以得到油门更灵敏的结果:</p><ol><li>最简单的，车重不同，同扭力下加速度不同</li><li>其次，同扭力下，车身越长，传递到后轮的马力就越少，时间就越长(?)</li><li>变速箱的密齿比与疏齿比决定了低速与高速下的马力区别</li><li>。。。</li></ol><p>油门更灵敏也是有代价的，最高速度上不去，舒适性减弱….</p><p>大概就是这样吧，这本书会让我基本入门, 也会让我了解到汽车工程,调教这一领域是有多有趣, 又多复杂。</p><p>PS: 那天和肖老师聊起我读这本书被问到，可不可以通过历史数据与模型来得到一辆汽车调教的最优结果。<br>细细想来，样本量的多少和驾驶员的不确定性是这个问题求解的最棘手的因素。</p><p>以及，如果自动驾驶能达到一般赛车手的水平，这个问题我觉得是可以用模型解决的。</p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/03/05/car.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>我的美食观</title>
      <link>http://lchiffon.github.io/2017/03/04/food.html</link>
      <guid>http://lchiffon.github.io/2017/03/04/food.html</guid>
      <pubDate>Sat, 04 Mar 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;为什么我不去卖光碟的店挑电影呢?&lt;br&gt;因为里面没有评分啊&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作为一个吃货, 挑选餐厅总是一个艰难而痛苦的决定. 幸好, 现代很多网站提供了各种餐厅的评价分数, 以一个量化的指标来评价餐厅的好坏.&lt;/p&gt;
&lt;
        
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>为什么我不去卖光碟的店挑电影呢?<br>因为里面没有评分啊</p></blockquote><p>作为一个吃货, 挑选餐厅总是一个艰难而痛苦的决定. 幸好, 现代很多网站提供了各种餐厅的评价分数, 以一个量化的指标来评价餐厅的好坏.</p><p>但是, 没有一个网站是以口味来评价餐厅的, 而是以点评来评价, 换句话说, 口味, 环境, 服务, 缺一不可.</p><p>而且, 不得不承认, 餐厅背后的商业价值才是默认排序最需要考虑的.</p><p>对于只在意口味不在意环境和服务的我来说, 经常使用的是口味从高到低来排序, 但这个排序会很自然带来一个问题, 餐厅消费越高, 环境越好, 口味就越棒.</p><blockquote><p>人们总希望在花了一大笔钱之后不承认自己被坑了…</p></blockquote><p>所以呢, 我后来开始关注餐厅的分差, 口味环境分差越大, 说明这家店是一个超越了餐厅本身环境的美食.</p><p>支持这一论点需要一些数据比如:<br><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head(data)</span><br></pre></td></tr></table></figure></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">                          name city avg_price product_rating environment_rating</span><br><span class="line"><span class="number">1</span>    黑柴日本料理铁板烧(黑柴Ⅰ) 上海       <span class="number">168</span>            <span class="number">8.6</span>                <span class="number">8.5</span></span><br><span class="line"><span class="number">2</span>         王品牛排(上海松江店) 上海       <span class="number">371</span>            <span class="number">9.1</span>                <span class="number">9.2</span></span><br><span class="line"><span class="number">3</span>       赞巴拉藏餐(松江万达店) 上海        <span class="number">77</span>            <span class="number">8.8</span>                <span class="number">9.1</span></span><br><span class="line"><span class="number">4</span>   松荣之风和里烧肉(江学路店) 上海       <span class="number">144</span>            <span class="number">7.9</span>                <span class="number">8.2</span></span><br><span class="line"><span class="number">5</span>             吃好丸好(外冈店) 上海        <span class="number">12</span>            <span class="number">7.1</span>                <span class="number">7.1</span></span><br><span class="line"><span class="number">6</span> 陌生人火锅餐厅(开元地中海店) 上海        <span class="number">99</span>            <span class="number">9.0</span>                <span class="number">9.1</span></span><br></pre></td></tr></table></figure><p><del>你问了数据怎么来的我也不会说的</del></p><p>最简单的方法是做个回归, 用残差看下各个餐厅是溢价还是折价<br><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model = lm(product_rating~environment_rating+avg_price+<span class="number">0</span>,data=data)</span><br><span class="line">summary(model)</span><br></pre></td></tr></table></figure></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">...</span></span><br><span class="line">Coefficients:</span><br><span class="line">                     Estimate Std. Error  t value Pr(&gt;|t|)    </span><br><span class="line">environment_rating  <span class="number">1.002e+00</span>  <span class="number">2.889e-05</span> <span class="number">34673.77</span>   &lt;<span class="number">2e-16</span> ***</span><br><span class="line">avg_price          -<span class="number">1.524e-05</span>  <span class="number">5.622e-07</span>   -<span class="number">27.11</span>   &lt;<span class="number">2e-16</span> ***</span><br><span class="line">---</span><br><span class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br><span class="line"><span class="keyword">...</span></span><br></pre></td></tr></table></figure><p>我还以为有个新参数出来呢, 结果就是1.0, R-square 0.99.</p><p>因为某些原因(看官自己脑补), avg_price平均价格不显著, 所以, 不用考虑价格, 直接用口味减环境来评价餐厅就好.</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line">data %&gt;%</span><br><span class="line">  mutate(rate = product_rating-environment_rating) %&gt;%   arrange(-rate) %&gt;%</span><br><span class="line">  filter(city==<span class="string">'上海'</span>) %&gt;%</span><br><span class="line">  head(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">                       name city avg_price product_rating environment_rating rate</span><br><span class="line">1  八村烧烤海鲜满天红小龙虾 上海        42            7.5                4.2  3.3</span><br><span class="line">2                    馄饨店 上海        10            4.0                1.0  3.0</span><br><span class="line">3                    大肠面 上海        27            7.8                5.0  2.8</span><br><span class="line">4              旧款宁波饭店 上海       120            8.2                5.5  2.7</span><br><span class="line">5                华华川菜馆 上海        50            7.2                4.6  2.6</span><br><span class="line">6                康林农家乐 上海        77            8.7                6.2  2.5</span><br><span class="line">7            D&amp;D Steakhouse 上海       288            8.8                6.4  2.4</span><br><span class="line">8      老四海鲜城(通北路店) 上海        51            6.3                3.9  2.4</span><br><span class="line">9  彩虹寿司(东体育会路总店) 上海        43            8.2                5.8  2.4</span><br><span class="line">10       芷月楼老法师高汤面 上海        33            6.9                4.6  2.3</span><br></pre></td></tr></table></figure><p>这批店有点恐怖, 我还是定下环境上6.5以上的店吧..我对美食的心还不够诚…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data %&gt;%</span><br><span class="line">  mutate(rate = product_rating-environment_rating) %&gt;%   arrange(-rate) %&gt;%</span><br><span class="line">  filter(city==&apos;上海&apos; &amp; environment_rating&gt;6.5) %&gt;%</span><br><span class="line">  head(20)</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">                              name city avg_price product_rating environment_rating rate</span><br><span class="line"><span class="number">1</span>                       佳味海鲜馆 上海       <span class="number">142</span>            <span class="number">9.0</span>                <span class="number">6.8</span>  <span class="number">2.2</span></span><br><span class="line"><span class="number">2</span>                         凯恩酒家 上海       <span class="number">100</span>            <span class="number">9.1</span>                <span class="number">6.9</span>  <span class="number">2.2</span></span><br><span class="line"><span class="number">3</span>             粤汕一牛(徐虹中路店) 上海        <span class="number">96</span>            <span class="number">9.0</span>                <span class="number">7.0</span>  <span class="number">2.0</span></span><br><span class="line"><span class="number">4</span>                           潮汕庄 上海       <span class="number">163</span>            <span class="number">8.6</span>                <span class="number">6.6</span>  <span class="number">2.0</span></span><br><span class="line"><span class="number">5</span>                 北士大酒店中餐厅 上海       <span class="number">138</span>            <span class="number">8.9</span>                <span class="number">6.9</span>  <span class="number">2.0</span></span><br><span class="line"><span class="number">6</span>                       谷沙屋面铺 上海        <span class="number">18</span>            <span class="number">8.7</span>                <span class="number">6.7</span>  <span class="number">2.0</span></span><br><span class="line"><span class="number">7</span>                 蓝帝老上海本帮菜 上海        <span class="number">98</span>            <span class="number">8.5</span>                <span class="number">6.6</span>  <span class="number">1.9</span></span><br><span class="line"><span class="number">8</span>             上海为民商行清真饭店 上海        <span class="number">23</span>            <span class="number">8.5</span>                <span class="number">6.6</span>  <span class="number">1.9</span></span><br><span class="line"><span class="number">9</span>                       大块头排档 上海        <span class="number">78</span>            <span class="number">8.5</span>                <span class="number">6.6</span>  <span class="number">1.9</span></span><br><span class="line"><span class="number">10</span>                顽固亲父串烧酒馆 上海       <span class="number">155</span>            <span class="number">8.8</span>                <span class="number">6.9</span>  <span class="number">1.9</span></span><br><span class="line"><span class="number">11</span> 钱家?乔老爷铜炉涮锅(内江路总店) 上海        <span class="number">87</span>            <span class="number">9.1</span>                <span class="number">7.2</span>  <span class="number">1.9</span></span><br><span class="line"><span class="number">12</span>                          蛇王王 上海       <span class="number">164</span>            <span class="number">8.8</span>                <span class="number">7.0</span>  <span class="number">1.8</span></span><br><span class="line"><span class="number">13</span>                        金芬食府 上海        <span class="number">71</span>            <span class="number">8.8</span>                <span class="number">7.0</span>  <span class="number">1.8</span></span><br><span class="line"><span class="number">14</span>                      广东生滚粥 上海        <span class="number">21</span>            <span class="number">8.4</span>                <span class="number">6.6</span>  <span class="number">1.8</span></span><br><span class="line"><span class="number">15</span>              天全鱼庄(零陵路店) 上海        <span class="number">52</span>            <span class="number">8.4</span>                <span class="number">6.6</span>  <span class="number">1.8</span></span><br><span class="line"><span class="number">16</span>            新苑私房菜(嘉善路店) 上海       <span class="number">128</span>            <span class="number">8.6</span>                <span class="number">6.8</span>  <span class="number">1.8</span></span><br><span class="line"><span class="number">17</span>                湘粹(南京西路店) 上海        <span class="number">65</span>            <span class="number">8.6</span>                <span class="number">6.8</span>  <span class="number">1.8</span></span><br><span class="line"><span class="number">18</span>                  兄弟情海鲜烧烤 上海        <span class="number">86</span>            <span class="number">9.1</span>                <span class="number">7.3</span>  <span class="number">1.8</span></span><br><span class="line"><span class="number">19</span>                      小灯泡烧烤 上海        <span class="number">38</span>            <span class="number">9.0</span>                <span class="number">7.2</span>  <span class="number">1.8</span></span><br><span class="line"><span class="number">20</span>                  阿新海鲜加工坊 上海       <span class="number">116</span>            <span class="number">9.0</span>                <span class="number">7.2</span>  <span class="number">1.8</span></span><br></pre></td></tr></table></figure><p>哦呀, 不错可以的, 试想一下, 其实每天大家吃的店一般是口味8点几的, 一家店能口味上9但是环境只有6分, 那么, 该是有多好吃….</p><p>恩, 可以约起来美食探险了, 前提是要把潮汕牛肉去掉 <del>什么米其林, 美食林,点评米其林的白白</del></p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/03/04/food.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Vue.js学习III(模板语法)</title>
      <link>http://lchiffon.github.io/2017/02/09/vue03.html</link>
      <guid>http://lchiffon.github.io/2017/02/09/vue03.html</guid>
      <pubDate>Thu, 09 Feb 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;有用的链接:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/awesome-vue#libraries--plugins&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vue生态库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
        
      
      </description>
      
      <content:encoded><![CDATA[<p>有用的链接:</p><ul><li><a href="https://github.com/vuejs/awesome-vue#libraries--plugins" target="_blank" rel="noopener">Vue生态库</a></li><li><a href="https://github.com/vuejs/vue" target="_blank" rel="noopener">Github</a></li><li><a href="https://jsfiddle.net/chrisvfritz/50wL7mdz/" target="_blank" rel="noopener">在线编辑器</a></li><li><a href="https://cn.vuejs.org" target="_blank" rel="noopener">中文VUE教程网站</a></li><li><a href="https://cn.vuejs.org/v2/api" target="_blank" rel="noopener">API文档</a></li></ul><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><p>模板语法是一套用于将DOM绑定到底层Vue的方法,所有vue.js都可以被HTML解析. 每次底层数据被改变的时候, Vue都会自动计算重新渲染的最小代价, 并应用到整个页面上. 同样也可以使用<a href="https://cn.vuejs.org/v2/guide/render-function.html" target="_blank" rel="noopener">渲染函数</a>或者用JSX模板</p><h2 id="插值"><a href="#插值" class="headerlink" title="插值"></a>插值</h2><h3 id="最简单的文本插值"><a href="#最简单的文本插值" class="headerlink" title="最简单的文本插值"></a>最简单的文本插值</h3><p>使用大括号插值<code>\{\{}}</code>(名为Mustache)<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Message: \&#123;\&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>可以使用<code>v-once</code>进行单次插值, 数据改变后插值内容不更新<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-once</span>&gt;</span>THIS wont change: \&#123;\&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="纯HTML插值"><a href="#纯HTML插值" class="headerlink" title="纯HTML插值"></a>纯HTML插值</h3><p>纯html插值需要使用<code>v-html</code>来实现, 数据绑定会被忽略, 有可能引起<a href="https://en.wikipedia.org/wiki/Cross-site_scripting" target="_blank" rel="noopener">XSS攻击</a>, 该部分忽略</p><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p>Mustache不能用于HTML属性, 需要使用<code>v-bind:@attribute</code>来绑定属性:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">"dynamicId"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>同样可以使用布尔值来实现:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-bind:disabled</span>=<span class="string">"someConditions"</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="JavaScript表达式"><a href="#JavaScript表达式" class="headerlink" title="JavaScript表达式"></a>JavaScript表达式</h3><p>Vue可以使用单个表达式实现, 可以使用<code>Math</code>和<code>Date</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\&#123;\&#123; number + <span class="number">1</span>&#125;&#125;</span><br><span class="line">\&#123;\&#123; ok ? <span class="string">'Yes'</span> : <span class="string">'No'</span>&#125;&#125;</span><br><span class="line">\&#123;\&#123; message.split(<span class="string">""</span>).reverse(),join(<span class="string">""</span>) &#125;&#125;</span><br></pre></td></tr></table></figure></p><p>以下例子是完整的语句, 并不会生效<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\&#123;\&#123; <span class="keyword">var</span> a = <span class="number">1</span>&#125;&#125;</span><br><span class="line">\&#123;\&#123; <span class="keyword">if</span>(OK)&#123;<span class="keyword">return</span> message&#125; &#125;&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Vue指令"><a href="#Vue指令" class="headerlink" title="Vue指令"></a>Vue指令</h2><p><code>v-</code>开头的命令为vue使用的指令, 比如<code>v-if</code>为判断表达式真假而插入元素<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"seen"</span>&gt;</span>NOW UC me<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>一些指令可以接受一个参数, 在后面用冒号指明, 如<code>v-bind</code>用于响应式更新HTML属性:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">"url"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>还有一个例子为用<code>v-on:click</code>来对事件进行绑定.</p><h3 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h3><p>用<code>.</code>绑定特殊后缀, 比如用<code>.prevent</code>修饰符告诉<code>v-on</code>调用<code>event.preventDefault()</code>:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>=<span class="string">"onSubmit"</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h3><p>使用<code>|</code>来做文本格式化:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\&#123;\&#123; message | capitalize &#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">"rawId | formatId"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><code>v-bind</code>仅在2.1.0之后才可以使用.<br>在Vue中的定义如下:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="comment">// el,data,..</span></span><br><span class="line">  filters:&#123;</span><br><span class="line">    capitalize: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(!value) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">      value = value.toString()</span><br><span class="line">      <span class="keyword">return</span> value.chartAt(<span class="number">0</span>).toUpperCase() + value.slice(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>过滤器可以串联,可以传其他参数.<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\&#123;\&#123; message | filter1 | filter(Arg2, Arg3) &#125;&#125;</span><br></pre></td></tr></table></figure></p><h2 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h2><p><code>v-bind</code>可以缩写为<code>:</code><br><code>v-on</code>可以缩写为<code>@</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--完整语法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">"url"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--缩写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">"url"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--完整语法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click</span>=<span class="string">"doSth"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--缩写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">"doSth"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/02/09/vue03.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Vue.js学习II(Vue实例)</title>
      <link>http://lchiffon.github.io/2017/02/08/vue02.html</link>
      <guid>http://lchiffon.github.io/2017/02/08/vue02.html</guid>
      <pubDate>Wed, 08 Feb 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;有用的链接:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/awesome-vue#libraries--plugins&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vue生态库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
        
      
      </description>
      
      <content:encoded><![CDATA[<p>有用的链接:</p><ul><li><a href="https://github.com/vuejs/awesome-vue#libraries--plugins" target="_blank" rel="noopener">Vue生态库</a></li><li><a href="https://github.com/vuejs/vue" target="_blank" rel="noopener">Github</a></li><li><a href="https://jsfiddle.net/chrisvfritz/50wL7mdz/" target="_blank" rel="noopener">在线编辑器</a></li><li><a href="https://cn.vuejs.org" target="_blank" rel="noopener">中文VUE教程网站</a></li><li><a href="https://cn.vuejs.org/v2/api" target="_blank" rel="noopener">API文档</a></li></ul><h2 id="Vue实例"><a href="#Vue实例" class="headerlink" title="Vue实例"></a>Vue实例</h2><h3 id="构造器"><a href="#构造器" class="headerlink" title="构造器"></a>构造器</h3><ol><li>使用: <code>new Vue({})</code></li><li>可复用的构造器:</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myComponent = Vue.extend(&#123;</span><br><span class="line">  <span class="comment">//扩展选项</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">var</span> myComponentInstance = <span class="keyword">new</span> MyComponent</span><br></pre></td></tr></table></figure><p>建议使用自定义元素而不是可复用构造器</p><h3 id="属性与方法"><a href="#属性与方法" class="headerlink" title="属性与方法"></a>属性与方法</h3><ol><li>每个实例都会自动<strong>代理</strong>data中的对象的所有属性</li><li>只有data的对象是可以被<strong>代理</strong>的</li></ol><h4 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = &#123;<span class="attr">a</span>:<span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  data: data</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">data.a==vm.a</span><br><span class="line"><span class="comment">//设置属性会影响原始数据</span></span><br><span class="line">vm.a=<span class="number">2</span></span><br><span class="line">data.a</span><br><span class="line"><span class="comment">//2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置原始数据也会影响Vue对象</span></span><br><span class="line">data.a=<span class="number">3</span></span><br><span class="line">vm.a</span><br></pre></td></tr></table></figure><h4 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = &#123;<span class="attr">a</span>:<span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#example"</span>,</span><br><span class="line">  data: data</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">vm.$data === data</span><br><span class="line">vm.$el === <span class="built_in">document</span>.getElementById(<span class="string">'example'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// $watch是一个实例方法</span></span><br><span class="line">vm.$watch(<span class="string">'a'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">newVal,oldVal</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//该方法将在`vm.a改变后被调用`</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="实例生命周期"><a href="#实例生命周期" class="headerlink" title="实例生命周期"></a>实例生命周期</h3><p>create-&gt;mounted-&gt;updated-&gt;destroyed</p><p><code>this</code>用于指向调用它的实例<br><img src="https://cn.vuejs.org/images/lifecycle.png" alt=""></p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/02/08/vue02.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Vue.js学习I(基本使用)</title>
      <link>http://lchiffon.github.io/2017/02/07/vue01.html</link>
      <guid>http://lchiffon.github.io/2017/02/07/vue01.html</guid>
      <pubDate>Tue, 07 Feb 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;VUE-JS&quot;&gt;&lt;a href=&quot;#VUE-JS&quot; class=&quot;headerlink&quot; title=&quot;VUE.JS&quot;&gt;&lt;/a&gt;VUE.JS&lt;/h1&gt;&lt;p&gt;有用的链接:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="VUE-JS"><a href="#VUE-JS" class="headerlink" title="VUE.JS"></a>VUE.JS</h1><p>有用的链接:</p><ul><li><a href="https://github.com/vuejs/awesome-vue#libraries--plugins" target="_blank" rel="noopener">Vue生态库</a></li><li><a href="https://github.com/vuejs/vue" target="_blank" rel="noopener">Github</a></li><li><a href="https://jsfiddle.net/chrisvfritz/50wL7mdz/" target="_blank" rel="noopener">在线编辑器</a></li><li><a href="https://cn.vuejs.org" target="_blank" rel="noopener">中文VUE教程网站</a></li><li><a href="https://cn.vuejs.org/v2/api" target="_blank" rel="noopener">API文档</a></li></ul><p>VUE笔记, 手打代码与文档于<a href="https://cn.vuejs.org" target="_blank" rel="noopener">中文VUE教程网站</a></p><h2 id="第一部分-简介"><a href="#第一部分-简介" class="headerlink" title="第一部分 简介"></a>第一部分 简介</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Vue.js 是一套轻量级js框架, 可以用于构建自己相关的html服务等.<br>Vue.js在设计之初的目标是通过尽可能简单的API去实现响应数据绑定和组合的视图套件</p><p>特性:</p><ul><li><a href="https://cn.vuejs.org/v2/guide/single-file-components.html" target="_blank" rel="noopener">单文件组件支持</a></li><li><a href="https://github.com/vuejs/awesome-vue#libraries--plugins" target="_blank" rel="noopener">Vue生态库</a></li><li><a href="https://github.com/vuejs/vue" target="_blank" rel="noopener">Github</a></li><li><a href="https://jsfiddle.net/chrisvfritz/50wL7mdz/" target="_blank" rel="noopener">在线编辑器</a></li><li><a href="https://cn.vuejs.org" target="_blank" rel="noopener">中文VUE教程网站</a></li></ul><p>引用:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'https://unpkg.com/vue/dist/vue.js'</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>vue与vue-cli:<br>vue-cli是vue的一个命令行工具, 在熟悉vue之后会进行学习.</p><h3 id="声明式渲染"><a href="#声明式渲染" class="headerlink" title="声明式渲染"></a>声明式渲染</h3><h4 id="例子1"><a href="#例子1" class="headerlink" title="例子1"></a>例子1</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  \&#123;\&#123; message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">'Hello Vue!'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>JS中将app与html的DOM绑定到了一起, 所以可以在浏览器中的控制台中更改: <code>app.message=&quot;XXX&quot;</code>来<br>动态修改DOM, (也就可以避免使用jQuery+ifelse去做判断更新的复杂代码).</p><h4 id="例子2"><a href="#例子2" class="headerlink" title="例子2"></a>例子2</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-2"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind:title</span>=<span class="string">"message"</span>&gt;</span></span><br><span class="line">    Hover your mouse over me for a few seconds to see my dynamically bound title!</span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app2 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app-2'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">'You loaded this page on '</span> + <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这个例子里面用VUE绑定了一个DOM, <code>v-bind</code>被称为一个<strong>指令</strong>, 以<code>v-</code>开头代表是一个Vue.js<br>的特殊属性, 就像Agular中的<code>ng-</code>一样.这句指令(<code>v-bind:title=&quot;message&quot;</code>)代表将这个DOM的<br><code>title</code>属性与Vue实例的<code>message</code>绑定到一起.</p><p>同样的, 在控制台中可以使用<code>app2.message=&#39;Other commments&#39;</code>进行更新.</p><h3 id="条件与循环"><a href="#条件与循环" class="headerlink" title="条件与循环"></a>条件与循环</h3><h4 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"seen"</span>&gt;</span></span><br><span class="line">    Now U C ME<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app3 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">"#app-3"</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      seen: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p>这里例子中有一个<code>v-if</code>的属性, 代表如果是true, 将进行显示, 否则不显示.<br>控制台中用<code>app3.seen=false</code>进行隐藏. 过渡中有<a href="https://cn.vuejs.org/v2/guide/transitions.html" target="_blank" rel="noopener">可以有隐藏效果</a></p><h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">'app-4'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"todo in todos"</span>&gt;</span></span><br><span class="line">      \&#123;\&#123; todo.text &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app4 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app-4"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    todos: [</span><br><span class="line">      &#123;<span class="attr">text</span>: <span class="string">'Learn JS'</span>&#125;,</span><br><span class="line">      &#123;<span class="attr">text</span>: <span class="string">'Learn Vue'</span>&#125;,</span><br><span class="line">      &#123;<span class="attr">text</span>: <span class="string">'Build Something awesome'</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>可以用<code>app4.todos.push({text:&#39;new message!&#39;})</code>来更新一个新的内容~</p><h3 id="处理用户输入"><a href="#处理用户输入" class="headerlink" title="处理用户输入"></a>处理用户输入</h3><h4 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h4><p><code>v-on</code>用于绑定事件,Vue中的methods实现方法的定义.<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-5"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>\&#123;\&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"reverseMessage"</span>&gt;</span>Reverse Message<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app-5'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">'Hello Vue.js!'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    reverseMessage: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.message = <span class="keyword">this</span>.message.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="双向绑定"><a href="#双向绑定" class="headerlink" title="双向绑定"></a>双向绑定</h4><p><code>v-model</code>用于绑定DOM和输入<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-6"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>\&#123;\&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app6 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app-6"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">"Hello Vue~"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="构造用户组件"><a href="#构造用户组件" class="headerlink" title="构造用户组件"></a>构造用户组件</h3><p>这部分稍微有点抽象,过程是这样的:</p><ol><li>用Vue定义一个新的DOM, 如教程中所讲, 一个组件实质上是一个有预定义选项的Vue实例</li><li>模板中写入组件</li><li>对这个组件绑定数据</li></ol><p><code>Vue.component</code>定义DOM, <code>props</code>定义传入对象, <code>templates</code>决定输出内容<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-7"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tool-set</span> <span class="attr">v-for</span>=<span class="string">"a in todoList"</span> <span class="attr">v-bind:todo</span>=<span class="string">"a"</span>&gt;</span><span class="tag">&lt;/<span class="name">tool-set</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">"tool-set"</span>,&#123;</span><br><span class="line">  props:[<span class="string">'todo'</span>],</span><br><span class="line">  template:<span class="string">'&lt;li&gt;\&#123;\&#123;todo.text&#125;&#125;&lt;/li&gt;'</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">var</span> app7 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el:<span class="string">"#app-7"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    todoList: [</span><br><span class="line">      &#123;<span class="attr">text</span>: <span class="string">"No.1"</span>&#125;,</span><br><span class="line">      &#123;<span class="attr">text</span>: <span class="string">"No.2"</span>&#125;,</span><br><span class="line">      &#123;<span class="attr">text</span>: <span class="string">"No.3"</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/02/07/vue01.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>十行代码看到AQI</title>
      <link>http://lchiffon.github.io/2017/01/07/aqi.html</link>
      <guid>http://lchiffon.github.io/2017/01/07/aqi.html</guid>
      <pubDate>Sat, 07 Jan 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;我错了, 我承认我是标题党, 怎么可能用十行代码完成全国三百个多个城市AQI的抓取, 清洗与可视化&lt;/p&gt;
&lt;p&gt;我仔细数了数, 去掉注释, 一共是11行…&lt;/p&gt;
&lt;p&gt;AQI是空气质量指数（Air Quality Index，简称AQI）是定量描述空气质量状况的无量纲指
        
      
      </description>
      
      <content:encoded><![CDATA[<p>我错了, 我承认我是标题党, 怎么可能用十行代码完成全国三百个多个城市AQI的抓取, 清洗与可视化</p><p>我仔细数了数, 去掉注释, 一共是11行…</p><p>AQI是空气质量指数（Air Quality Index，简称AQI）是定量描述空气质量状况的无量纲指数.</p><p>对于最近的空气质量, 我无话可说, 只好先讲个段子(没有干货段子凑, 网侵删):</p><p><em>受朋友委托，大家帮个忙：北京人，女，26岁，未婚，1.68米，体重50公斤，英国海归。貌美，爱好健身。目前在一家世界500强做产品经理，工作稳定，年薪近90万。三环内有四套学区房，一套按揭，三套全款。 名下有一辆宝马7系，上班时开。父母均是国家领导干部。朋友和家人现在非常着急，想让介绍一个效果比较好的防霾口罩。</em></p><p>[手动债见]</p><p>咳咳, 回归正题, 在十一行代码之前, 先介绍下出场的两个包, 单library这些包就占掉了快20%的代码量.</p><h4 id="rvest"><a href="#rvest" class="headerlink" title="rvest"></a><em>rvest</em></h4><p> <a href="https://github.com/hadley/rvest" target="_blank" rel="noopener">rvest</a>, 一个较新的数据抓取包,类似py的beautiful soup, 在不考虑cookie代理get/post等情况下, 比Rcurl与XML用起来方便, 但话说回来, 爬虫最大工作量也并不一定是写代码.</p><p> 其中抓取用的是CSS selector的语法, 和Xpath略有区别,想快速学习的话可以去这里学下<a href="http://flukeout.github.io/" target="_blank" rel="noopener">怎么选果冻</a></p><h4 id="leafletCN"><a href="#leafletCN" class="headerlink" title="leafletCN"></a><em>leafletCN</em></h4><p><a href="https://github.com/lchiffon/leafletCN" target="_blank" rel="noopener">leafletCN</a> 是一个基于<a href="https://github.com/rstudio/leaflet" target="_blank" rel="noopener">leaflet</a>包做的大中华扩展,<br>优势在于有细分到<strong>县级市</strong>级别的区划数据, 虽然没那么准, 但是也基本能用了~</p><p><em>这玩意连个文档都没有. 作者真懒.</em></p><p>好了, 以下是代码, 运行之后会出现一个以高德地图为底图, 可缩放可点击的结果</p><p>Windows用户<strong>可能需要</strong>运行注释中我标的内容~</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install.packages("rvest")</span></span><br><span class="line"><span class="comment"># install.packages("leafletCN")</span></span><br><span class="line"><span class="comment"># windows:</span></span><br><span class="line"><span class="comment">#   Sys.setlocale("LC_CTYPE", "eng")</span></span><br><span class="line"><span class="comment">## GAME begin~</span></span><br><span class="line"><span class="keyword">library</span>(rvest)</span><br><span class="line"><span class="keyword">library</span>(leafletCN)</span><br><span class="line"><span class="comment"># Sys.setlocale("LC_CTYPE", "eng")</span></span><br><span class="line">doc = read_html(<span class="string">"http://www.pm25s.com/cn/rank/"</span>)</span><br><span class="line"><span class="comment">## http://flukeout.github.io/</span></span><br><span class="line">cities = doc %&gt;% html_nodes(<span class="string">".cityrank a"</span>) %&gt;%</span><br><span class="line">  html_text()</span><br><span class="line"><span class="comment"># windows:</span></span><br><span class="line"><span class="comment">#   cities = iconv(cities, "UTF-8", "UTF-8")</span></span><br><span class="line">AQI = doc %&gt;% html_nodes(<span class="string">"span[class^='lv']"</span>) %&gt;%</span><br><span class="line">  html_text() %&gt;% .[c(<span class="literal">F</span>,<span class="literal">F</span>,<span class="literal">T</span>)] %&gt;% as.numeric</span><br><span class="line">dat = data.frame(city = cities, AQI = AQI)</span><br><span class="line">geojsonMap(dat, <span class="string">"city"</span>,</span><br><span class="line">           popup =  paste0(dat$city,<span class="string">":"</span>,dat$AQI),</span><br><span class="line">           palette = <span class="string">"Reds"</span>, legendTitle = <span class="string">"AQI"</span>)</span><br></pre></td></tr></table></figure><p><img src="http://7xr5em.com1.z0.glb.clouddn.com/Rplot.png"></p><p>亮点自寻, 欢迎点赞~</p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/01/07/aqi.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>leafletCN</title>
      <link>http://lchiffon.github.io/2017/01/07/leafletCN.html</link>
      <guid>http://lchiffon.github.io/2017/01/07/leafletCN.html</guid>
      <pubDate>Sat, 07 Jan 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;leafletCN是一个基于&lt;a href=&quot;https://github.com/rstudio/leaflet&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;leaflet&lt;/a&gt;的中国扩展包, 里面保存了一些适用于中国的区域划分数据以及一些有帮助的函
        
      
      </description>
      
      <content:encoded><![CDATA[<p>leafletCN是一个基于<a href="https://github.com/rstudio/leaflet" target="_blank" rel="noopener">leaflet</a>的中国扩展包, 里面保存了一些适用于中国的区域划分数据以及一些有帮助的函数, 地理区划数据来源于github的<a href="https://github.com/longwosion/geojson-map-china" target="_blank" rel="noopener">geojson-map-china</a>项目. 数据细分到县级市.</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">## 稳定版</span><br><span class="line">install.packages(&quot;leafletCN&quot;)</span><br><span class="line">## 开发版</span><br><span class="line">devtools::install_github(&quot;lchiffon/leafletCN&quot;)</span><br></pre></td></tr></table></figure><h3 id="常用的函数"><a href="#常用的函数" class="headerlink" title="常用的函数"></a>常用的函数</h3><ul><li><code>regionNames</code> 返回某个地图的区域名</li><li><code>demomap</code> 传入地图名绘制示例地图</li><li><code>geojsonMap</code> 将一个分层颜色图绘制在一个实时地图上</li></ul><p>其他辅助leaflet包使用的函数</p><ul><li><code>amap</code> 在leaflet地图上叠加高德地图</li><li><code>read.geoShape</code> 读取一个geojson的对象,保存成spdataframe,以方便leaflet调用</li><li><code>leafletGeo</code>用地图名以及一个数据框创建一个sp的对象</li></ul><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><h4 id="regionNames"><a href="#regionNames" class="headerlink" title="regionNames"></a><em>regionNames</em></h4><p>传入需要查看的城市名, 显示这个城市支持的区域信息, 比如查看成都:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">regionNames(&quot;成都&quot;)</span><br><span class="line">[1] &quot;成华区&quot;   &quot;崇州市&quot;   &quot;大邑县&quot;   &quot;都江堰市&quot; &quot;金牛区&quot;  </span><br><span class="line">[6] &quot;金堂县&quot;   &quot;锦江区&quot;   &quot;龙泉驿区&quot; &quot;彭州市&quot;   &quot;蒲江县&quot;  </span><br><span class="line">[11] &quot;青白江区&quot; &quot;青羊区&quot;   &quot;双流县&quot;   &quot;温江区&quot;   &quot;武侯区&quot;  </span><br><span class="line">[16] &quot;新都区&quot;   &quot;新津县&quot;   &quot;邛崃市&quot;   &quot;郫县&quot;</span><br></pre></td></tr></table></figure></p><p>如果不传入对象, 会自动返回300多个支持的名字列表,包括各个城市,省,以及三个特殊的名字:</p><ol><li><code>world</code>世界地图</li><li><code>china</code>中国分省份地图</li><li><code>city</code>中国分城市地图</li></ol><h4 id="demomap"><a href="#demomap" class="headerlink" title="demomap"></a><em>demomap</em></h4><p>传入城市名,显示这个城市的示例地图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">demomap(&quot;台湾&quot;)</span><br></pre></td></tr></table></figure><p><img src="http://7xr5em.com1.z0.glb.clouddn.com/demo1.png" alt=""></p><h4 id="geojsonmap"><a href="#geojsonmap" class="headerlink" title="geojsonmap"></a><em>geojsonmap</em></h4><p>将一个数据框显示在需要展示的地图上.<br>在函数中做了一些有趣的设置, leafletCN会自动匹配传入的前两个字符来寻找合适的位置进行绘制,<br>所以基本不需要纠结是写’上海市’还是’上海’了</p><p>图做出来可以在上面点点点…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dat = data.frame(name = regionNames(&quot;china&quot;),</span><br><span class="line">                 value = runif(34))</span><br><span class="line">geojsonMap(dat,&quot;china&quot;)</span><br></pre></td></tr></table></figure><p><img src="http://7xr5em.com1.z0.glb.clouddn.com/demo2.png" alt=""></p><h5 id="geojsonmap-的参数"><a href="#geojsonmap-的参数" class="headerlink" title="geojsonmap 的参数"></a><em>geojsonmap</em> 的参数</h5><ul><li>还没开始写噗哈哈, 只写了帮助文档, 求PR</li></ul><h3 id="辅助函数"><a href="#辅助函数" class="headerlink" title="辅助函数"></a>辅助函数</h3><h4 id="amap"><a href="#amap" class="headerlink" title="amap"></a><em>amap</em></h4><p>叠加一个高德地图, 使用:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">leaflet() %&gt;%</span><br><span class="line">  amap() %&gt;%  </span><br><span class="line">  addMarkers(lng=116.3125774825, lat=39.9707249401, popup=&quot;The birthplace of COS&quot;)</span><br></pre></td></tr></table></figure></p><p><img src="http://7xr5em.com1.z0.glb.clouddn.com/demo3.png" alt=""></p><h4 id="read-geoShape"><a href="#read-geoShape" class="headerlink" title="read.geoShape"></a><em>read.geoShape</em></h4><p><code>read.geoShape</code>这个函数可以把一个geojson格式的数据读取为一个<code>SpatialPolygonsDataFrame</code>对象, 方便sp或者leaflet包中的调用.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(require(sp))&#123;</span><br><span class="line">  filePath = system.file(&quot;geojson/china.json&quot;,package = &quot;leafletCN&quot;)</span><br><span class="line">  map = read.geoShape(filePath)</span><br><span class="line">  plot(map)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://7xr5em.com1.z0.glb.clouddn.com/demo4.png" alt=""></p><h4 id="leafletGeo"><a href="#leafletGeo" class="headerlink" title="leafletGeo"></a><em>leafletGeo</em></h4><p><code>leafletGeo</code>这个函数可以把一个数据框和一个地图组合在一起, 方便用leaflet调用, 其中名字的<br>变量为<code>name</code>, 数值的变量为<code>value</code>~</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">if(require(leaflet))&#123;</span><br><span class="line">  dat = data.frame(regionNames(&quot;china&quot;),</span><br><span class="line">                                runif(34))</span><br><span class="line">  map = leafletGeo(&quot;china&quot;, dat)</span><br><span class="line"></span><br><span class="line">   pal &lt;- colorNumeric(</span><br><span class="line">     palette = &quot;Blues&quot;,</span><br><span class="line">     domain = map$value)</span><br><span class="line"></span><br><span class="line">  leaflet(map) %&gt;% addTiles() %&gt;%</span><br><span class="line">     addPolygons(stroke = TRUE,</span><br><span class="line">     smoothFactor = 1,</span><br><span class="line">     fillOpacity = 0.7,</span><br><span class="line">     weight = 1,</span><br><span class="line">     color = ~pal(value),</span><br><span class="line">     popup = ~htmltools::htmlEscape(popup)</span><br><span class="line">     ) %&gt;%</span><br><span class="line">   addLegend(&quot;bottomright&quot;, pal = pal, values = ~value,</span><br><span class="line">                        title = &quot;legendTitle&quot;,</span><br><span class="line">                 labFormat = leaflet::labelFormat(prefix = &quot;&quot;),</span><br><span class="line">                 opacity = 1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://7xr5em.com1.z0.glb.clouddn.com/demo5.png" alt=""></p><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p><a href="http://langdawei.com/2017/01/07/aqi.html" target="_blank" rel="noopener">十行代码完成空气质量的可视化</a></p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/01/07/leafletCN.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hexo从头搭建自己的博客</title>
      <link>http://lchiffon.github.io/2017/01/05/hexo.html</link>
      <guid>http://lchiffon.github.io/2017/01/05/hexo.html</guid>
      <pubDate>Thu, 05 Jan 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;em&gt;已然从jekyll的坑跳了出来, 转向了hexo来构建自己的博客, 尤其是在windows下, 再也不需要繁琐的设置源, 每次要用额外的命令来构建server, 赞hexo. &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hexo.io/&quot; targe
        
      
      </description>
      
      <content:encoded><![CDATA[<p><em>已然从jekyll的坑跳了出来, 转向了hexo来构建自己的博客, 尤其是在windows下, 再也不需要繁琐的设置源, 每次要用额外的命令来构建server, 赞hexo. </em></p><p><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>是一个node.js的库, 是一个快速、简洁且高效的博客框架, hexo的社区有很多好玩的主题, 插件, 里面也有很多中国的开发者, 当然是以前端开发为主. 这篇博客会介绍用hexo搭建自己的<strong>数据</strong>博客的过程</p><p>以下是基本流程, 如果本篇有内容不清楚的过程, 可以根据这个流程查看<a href="https://hexo.io/docs/" target="_blank" rel="noopener">官方文档</a></p><p>完成这些工作后, 预期可以得到一个自己的网站, 也就是从头到尾搭建自己的网站, (需要买一个顶级域名来实现微信不屏蔽你的博客) 预计工作量如下: </p><p>windows + 完全不懂编程: 8h<br>熟悉git+github: 4h<br>熟悉git+github+node: 1h<br>熟悉git+github+以前有jekyll博客: 48h(迁移的故事太心酸)</p><p>相较于微信公众号和知乎,显然搞这个更有成就感嘛..</p><ul><li>前期准备<ol><li>安装node.js<ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></li></ul></li><li>安装git<ul><li><a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></li></ul></li><li>安装hexo</li><li>注册github<ul><li>新建一个名为[username].github.io的repo</li></ul></li></ol></li><li>博客构建<ol start="5"><li>hexo init</li><li>主题选择与设置</li><li>开始写博客吧</li><li>部署</li></ol></li><li>其他问题<ol start="8"><li>插件与域名</li></ol></li></ul><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><h4 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a><em>node.js</em></h4><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境. 如果你对前端的东西不是很熟, 可以忽略前一句, 直接把这个软件装好.<br>下载网址在:</p><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></li></ul><p>Windows 用户可以直接安装, 如果你是Linux/Mac的用户, 还需要额外设置一下node的环境变量</p><p>以保证在命令行(cmd)中运行 <code>node --version</code> 可以看到版本号,比如我的就是v6.9.2:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> node --version</span><br><span class="line">v6.9.2</span><br></pre></td></tr></table></figure><p>node 会给你的电脑中安装两个命令,一个是node, JavaScript运行环境, 另外一个是npm (node package manager), 前者基本不会被用到, 后者等下会有一些使用,安装一些需要的包.</p><h4 id="git"><a href="#git" class="headerlink" title="git"></a><em>git</em></h4><p>Git是一款免费、开源的分布式版本控制系统, 作用是处理各式各样版本管理, 文件管理的工作, 在博客搭建中, 它起到与Github沟通, 传输, 部署文件的工作.</p><p>安装可以参考廖雪峰的博客<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000/" target="_blank" rel="noopener">安装Git</a> 三种系统都讲的比较细致.</p><ul><li>Windows用户可以在<a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a>进行下载安装</li><li>Ubuntu/Debian用户使用 <code>sudo apt-get install git</code> 安装</li><li>Mac用户可以用AppStore安装Xcode，Xcode集成了Git，不过默认没有安装，你需要运行Xcode，选择菜单“Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择“Command Line Tools”，点“Install”就可以完成安装了</li></ul><p><strong>这个必须要做,否则后面的部署不能成功执行</strong><br>安装完毕之后, 需要设定下自己的名字已经邮箱, 在命令行(git bash)中执行:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git config --global user.name "Your Name"</span><br><span class="line"><span class="meta">$</span> git config --global user.email "email@example.com"</span><br></pre></td></tr></table></figure></p><h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h4><p>打开你的命令行工具(cmd, git bash, terminal …随便选一个就好,推荐windows用户用git bash, 就在自己的开始菜单里, 其他的用户天生就会命令行)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>等<a href="http://langdawei.com/coffee/index.html" target="_blank" rel="noopener">一杯咖啡</a>的时间, 安装好了之后, 看下<code>hexo --version</code> 能否成功执行.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> hexo --version</span><br><span class="line">hexo-cli: 1.0.2</span><br><span class="line">os: Windows_NT 6.1.7601 win32 x64</span><br><span class="line">http_parser: 2.7.0</span><br><span class="line">node: 6.9.2</span><br><span class="line">v8: 5.1.281.88</span><br><span class="line">uv: 1.9.1</span><br><span class="line">zlib: 1.2.8</span><br><span class="line">ares: 1.10.1-DEV</span><br><span class="line">icu: 57.1</span><br><span class="line">modules: 48</span><br><span class="line">openssl: 1.0.2j</span><br></pre></td></tr></table></figure><h4 id="github注册"><a href="#github注册" class="headerlink" title="github注册"></a>github注册</h4><p><a href="https://github.com/" target="_blank" rel="noopener">Github</a>是一个~与A站与B站齐名, 三大同性交友的网站~面向开源及私有软件项目的托管平台.</p><p>注册与使用Github的原因是它可以免费为你提供一个开放的托管静态页面的网站, 不限流量, 完全免费.<br>注册我就不提了, 注册好了以后, 点加号, 按New Repository, 新建一个名为[username].github.io的repo.<br>比如我的用户名为lchiffon, 新建的repo就是<code>lchiffon.github.io</code>,建好就可以啦, 这步搞定.</p><h3 id="博客构建"><a href="#博客构建" class="headerlink" title="博客构建"></a>博客构建</h3><h4 id="init"><a href="#init" class="headerlink" title="init"></a>init</h4><p>在一个空的文件夹中进入命令行工具, (可以试试点击右键,并点击 Git Bash Here, 如果没有, 可以选择重装git 或者查下<a href="http://www.baidu.com/s?ie=utf-8&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=1&amp;tn=baidu&amp;wd=cd%E8%BF%99%E4%B8%AA%E5%91%BD%E4%BB%A4%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8&amp;oq=git%20%E5%AE%89%E8%A3%85&amp;rsv_pq=a8447baf0001ef9c&amp;rsv_t=222dUpzNBVPcyA3Hyv4RQH8l9tAj6SYjUco0pklfzobkzt%2FmKn8dsHWLvlc&amp;rqlang=cn&amp;rsv_enter=0&amp;inputT=1053&amp;rsv_n=2&amp;rsv_sug3=46&amp;rsv_sug4=1053" target="_blank" rel="noopener">cd这个命令怎么使用</a>)<br>并执行:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>等一系列命令完成后, 执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>当你看到以下命令代表执行成功, 可以用浏览器打开这个网页:<code>http://localhost:4000/</code>来查看自己搭建的博客</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p><img src="https://hexo.io/build/screenshots/landscape-60eb5ae7c8.png" alt=""></p><p>localhost代表的是你自己的本地服务, 把这个分享给朋友可不能打开, 需要上传到github,来分享给其他人</p><h4 id="写点什么"><a href="#写点什么" class="headerlink" title="写点什么"></a>写点什么</h4><p>在source/_post文件夹中, 有一个<code>hello-world.md</code>的文件, 按照这个例子写一个自己的文章,也是在这个文件夹中.<br><a href="http://sspai.com/25137" target="_blank" rel="noopener">markdown的语法可以看这里</a></p><p>写好之后刷新下<code>http://localhost:4000/</code>, 你就能看到自己的文章了~</p><h4 id="提交到github"><a href="#提交到github" class="headerlink" title="提交到github"></a>提交到github</h4><p>对于提交,需要修改文件夹中的<code>_config.yml</code>, 把里面deploy相关的修改成:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: http://github.com/[username]/[username].github.io</span><br></pre></td></tr></table></figure><p>[username]替换成自己的用户名,不加方括号</p><p>然后使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>来推送到github</p><p>稍等一段时间,就可以在<code>http://[username].github.io</code>来查看你自己的博客了~</p><h3 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h3><h4 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h4><p>基本的 theme就是你看到的挫样子, 可以去<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a>选一款主题,并按照主题的readme去进行设置</p><p>一般操作是:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone [themerepo] themes/[themename]</span><br></pre></td></tr></table></figure></p><p>然后修改<code>_config.yml</code>, 把里面<code>theme: landscape</code>修改成:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: [themename]</span><br></pre></td></tr></table></figure><p>之后可能依赖不同的theme去设置theme的参数(<code>themes/[themename]/_config.yml</code>)文件</p><h4 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h4><p>老bloger们都懂RSS是什么,也就是传说中的RSS订阅,生成方式是:</p><ol><li>安装<code>npm install hexo-generator-feed</code></li><li>修改<code>_config.yml</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plugin:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line">feed:</span><br><span class="line">  type: rss2</span><br><span class="line">  path: rss2.xml</span><br><span class="line">  limit: 20</span><br></pre></td></tr></table></figure><h4 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h4><p>申请域名,然后加入以下三个CDN记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@        A        192.30.252.153</span><br><span class="line">@        A        192.30.252.154</span><br><span class="line">www      CNAME    username.github.io.</span><br></pre></td></tr></table></figure><p>并在自己的项目中写一个CNAME的文件里面包含自己申请的域名(不包含<a href="http://www部分" target="_blank" rel="noopener">http://www部分</a>)</p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/01/05/hexo.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>新年快乐|最后一更</title>
      <link>http://lchiffon.github.io/2017/01/01/newYear.html</link>
      <guid>http://lchiffon.github.io/2017/01/01/newYear.html</guid>
      <pubDate>Sun, 01 Jan 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;新年快乐&lt;/p&gt;
&lt;p&gt;2016年过得好快~&lt;/p&gt;
&lt;p&gt;上半年还在携程起起伏伏, 准备老老实实做项目, 后来接下来了J.D. Power的offer开始从分析师走向全栈的路上.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3月沙巴,想再去潜一次水&lt;/li&gt;
&lt;li&gt;4月西藏,找到了自己的
        
      
      </description>
      
      <content:encoded><![CDATA[<p>新年快乐</p><p>2016年过得好快~</p><p>上半年还在携程起起伏伏, 准备老老实实做项目, 后来接下来了J.D. Power的offer开始从分析师走向全栈的路上.</p><ul><li>3月沙巴,想再去潜一次水</li><li>4月西藏,找到了自己的信仰(辣椒好吃)</li><li>5月JDpower</li><li>6月写出了wordcloud2</li><li>7月正式入职,开始搬砖</li><li>8月浙软开始上课</li><li>9月搞了一台高配置的机器但在ubuntu上装了steam</li><li>10月~12月 参加了杭州,厦门,上海三场R会,下定决心明年搞meetup</li></ul><p>年初列的计划完成了一半, 至少写文的计划基本全部搁浅, 计划40篇, 只写了12篇, 看来今年我要少计划一点了,</p><p>先说<a href="http://lchiffon.github.io/2016/01/01/newyear.html">年初计划</a>完成程度:</p><ul><li>REmap: 40% 没写htmlwidgets,做好shiny</li><li>recharts: 协助更新做到了</li><li>APItools: 没计划改版, 而且百度真的改版了</li><li>图像分析: 真给mxnet一个PR, 蠢到自己不想讲下去</li><li>博客改版: 妥妥推到明年</li><li>40篇文章: 完成12篇</li></ul><p>wishList 完成了60%,显卡西藏海滩完成了</p><p>列列2017新年的计划吧~</p><ul><li>新版博客</li><li>20篇blog+20本书</li><li>10场meetup</li><li>3个package(有一个已经快做完了hhh)</li><li>5场会议</li><li>100种水生动物</li><li>如果以上能做完,争取把自己的事情搞定</li></ul><p>哦,对了还有一个wishlist:</p><ol><li>BenQ TH670</li><li>Turkey</li><li>Beach</li><li>zx1</li><li>QC35</li></ol><p>不要紧张, 这个或许是<strong>旧版</strong>的最后一更了吧~</p>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2017/01/01/newYear.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>常用R包</title>
      <link>http://lchiffon.github.io/2016/11/13/Packages.html</link>
      <guid>http://lchiffon.github.io/2016/11/13/Packages.html</guid>
      <pubDate>Sun, 13 Nov 2016 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;最近略忙, 没有太多时间更新博客, 这是前段时间做的一个简单的汇总, 有价值的R包.&lt;br&gt;计划明年年初的时候换掉博客的架构, 投身HEXO, 顺便连起公众号…(上一个公众号已经因为太久不&lt;br&gt;更新被微信冻结了,hhh~)&lt;/p&gt;
&lt;p&gt;网页请点击&lt;a href=&quot;htt
        
      
      </description>
      
      <content:encoded><![CDATA[<p>最近略忙, 没有太多时间更新博客, 这是前段时间做的一个简单的汇总, 有价值的R包.<br>计划明年年初的时候换掉博客的架构, 投身HEXO, 顺便连起公众号…(上一个公众号已经因为太久不<br>更新被微信冻结了,hhh~)</p><p>网页请点击<a href="http://lchiffon.github.io/reveal_slidify/slides/packages/index.html?theme=sky#/slide-1">http://lchiffon.github.io/reveal_slidify/slides/packages/index.html?theme=sky#/slide-1</a></p><p><br></p><h3 id="请使用Chorme浏览器"><a href="#请使用Chorme浏览器" class="headerlink" title="请使用Chorme浏览器"></a>请使用Chorme浏览器</h3><p><br><br></p><iframe src="http://lchiffon.github.io/reveal_slidify/slides/packages/index.html?theme=sky#/slide-1" height="400px" width="95%"></iframe>]]></content:encoded>
      
      <comments>http://lchiffon.github.io/2016/11/13/Packages.html#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
